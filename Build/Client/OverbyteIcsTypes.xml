<?xml version="1.0" encoding="utf-8"?>
<namespace name="OverbyteIcsTypes" platform="Win32">
  <const name="OverbyteIcsTypesVersion" type="Integer" file="OverbyteIcsTypes.pas" line="67">
    <value>
      $6B
    </value>
  </const>
  <variable name="CopyRight" type="string" visibility="public" file="OverbyteIcsTypes.pas" line="68" />
  <type name="size_t" type="cardinal" loBound="0" hiBound="-1" file="System.pas" line="12" />
  <pointer name="Psize_t" type="Cardinal" indircnt="1" file="OverbyteIcsTypes.pas" line="171" />
  <type name="HANDLE_PTR" type="cardinal" loBound="0" hiBound="-1" file="Winapi.Windows.pas" line="254" />
  <type name="INT_PTR" type="integer" loBound="-2147483648" hiBound="2147483647" file="System.pas" line="12" />
  <type name="LONG_PTR" type="integer" loBound="-2147483648" hiBound="2147483647" file="System.pas" line="12" />
  <type name="UINT_PTR" type="cardinal" loBound="0" hiBound="-1" file="System.pas" line="12" />
  <type name="ULONG_PTR" type="cardinal" loBound="0" hiBound="-1" file="System.pas" line="12" />
  <type name="DWORD_PTR" type="cardinal" loBound="0" hiBound="-1" file="System.pas" line="12" />
  <pointer name="PINT_PTR" type="NativeInt" indircnt="1" file="OverbyteIcsTypes.pas" line="213" />
  <pointer name="PUINT_PTR" type="NativeUInt" indircnt="1" file="OverbyteIcsTypes.pas" line="215" />
  <class name="Exception" alias="System.SysUtils.Exception" file="OverbyteIcsTypes.pas" line="217">
    <ancestor name="TObject" namespace="System">
      <methodref name="Create" visibility="public" procflags="constructor">
      </methodref>
      <methodref name="Free" visibility="public">
      </methodref>
      <methodref name="DisposeOf" visibility="public" procflags="inline">
      </methodref>
      <methodref name="InitInstance" visibility="public" procflags="class">
      </methodref>
      <methodref name="CleanupInstance" visibility="public">
      </methodref>
      <methodref name="ClassType" visibility="public" procflags="inline">
      </methodref>
      <methodref name="ClassName" visibility="public" procflags="class">
      </methodref>
      <methodref name="ClassNameIs" visibility="public" procflags="class">
      </methodref>
      <methodref name="ClassParent" visibility="public" procflags="class">
      </methodref>
      <methodref name="ClassInfo" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="InstanceSize" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="InheritsFrom" visibility="public" procflags="class">
      </methodref>
      <methodref name="MethodAddress" visibility="public" procflags="class overload">
      </methodref>
      <methodref name="MethodAddress" visibility="public" procflags="class overload">
      </methodref>
      <methodref name="MethodName" visibility="public" procflags="class">
      </methodref>
      <methodref name="QualifiedClassName" visibility="public" procflags="class">
      </methodref>
      <methodref name="FieldAddress" visibility="public" procflags="overload">
      </methodref>
      <methodref name="FieldAddress" visibility="public" procflags="overload">
      </methodref>
      <methodref name="GetInterface" visibility="public">
      </methodref>
      <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
      </methodref>
      <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="UnitName" visibility="public" procflags="class">
      </methodref>
      <methodref name="UnitScope" visibility="public" procflags="class">
      </methodref>
      <methodref name="Equals" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="GetHashCode" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="ToString" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="SafeCallException" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="AfterConstruction" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="Dispatch" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="DefaultHandler" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="NewInstance" visibility="public" procflags="class virtual">
      </methodref>
      <methodref name="FreeInstance" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="Destroy" visibility="public" procflags="destructor virtual">
      </methodref>
      <methodref name="GetDisposed" visibility="protected" procflags="inline">
      </methodref>
      <methodref name="CheckDisposed" visibility="protected" procflags="inline">
      </methodref>
      <propertyref name="Disposed" visibility="protected">
      </propertyref>
    </ancestor>
    <members>
      <field name="FMessage" type="string" visibility="private" size="4" offset="4" file="System.SysUtils.pas" line="382">
      </field>
      <field name="FHelpContext" type="Integer" visibility="private" size="4" offset="8" file="System.SysUtils.pas" line="383">
      </field>
      <field name="FInnerException" type="Exception" visibility="private" size="4" offset="12" file="System.SysUtils.pas" line="384">
      </field>
      <field name="FStackInfo" type="Pointer" visibility="private" size="4" offset="16" file="System.SysUtils.pas" line="385">
      </field>
      <field name="FAcquireInnerException" type="Boolean" visibility="private" size="1" offset="20" file="System.SysUtils.pas" line="386">
      </field>
      <procedure name="Create@" visibility="class private" procflags="class constructor noself" file="System.SysUtils.pas" line="387">
      </procedure>
      <procedure name="Destroy@" visibility="class private" procflags="class destructor noself" file="System.SysUtils.pas" line="388">
      </procedure>
      <procedure name="SetInnerException" visibility="protected" file="System.SysUtils.pas" line="390">
      </procedure>
      <procedure name="SetStackInfo" visibility="protected" file="System.SysUtils.pas" line="391">
        <parameters>
          <parameter name="AStackInfo" type="Pointer" />
        </parameters>
      </procedure>
      <function name="GetStackTrace" visibility="protected" file="System.SysUtils.pas" line="392">
        <parameters>
          <retval type="string" />
        </parameters>
      </function>
      <procedure name="RaisingException" visibility="protected" procflags="virtual" file="System.SysUtils.pas" line="396">
        <parameters>
          <parameter name="P" type="PExceptionRecord" />
        </parameters>
      </procedure>
      <constructor name="Create" visibility="public" file="System.SysUtils.pas" line="398">
        <parameters>
          <parameter name="Msg" type="string" paramflags="const" />
        </parameters>
      </constructor>
      <constructor name="CreateFmt" visibility="public" file="System.SysUtils.pas" line="399">
        <parameters>
          <parameter name="Msg" type="string" paramflags="const" />
          <parameter name="Args" paramflags="const">
            <array name="Args">
              <element type="TVarRec" />
            </array>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="CreateRes" visibility="public" file="System.SysUtils.pas" line="401">
        <parameters>
          <parameter name="Ident" type="NativeUInt" />
        </parameters>
      </constructor>
      <constructor name="CreateRes" visibility="public" file="System.SysUtils.pas" line="403">
        <parameters>
          <parameter name="ResStringRec" type="PResStringRec" />
        </parameters>
      </constructor>
      <constructor name="CreateResFmt" visibility="public" file="System.SysUtils.pas" line="405">
        <parameters>
          <parameter name="Ident" type="NativeUInt" />
          <parameter name="Args" paramflags="const">
            <array name="Args">
              <element type="TVarRec" />
            </array>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="CreateResFmt" visibility="public" file="System.SysUtils.pas" line="407">
        <parameters>
          <parameter name="ResStringRec" type="PResStringRec" />
          <parameter name="Args" paramflags="const">
            <array name="Args">
              <element type="TVarRec" />
            </array>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="CreateHelp" visibility="public" file="System.SysUtils.pas" line="408">
        <parameters>
          <parameter name="Msg" type="string" paramflags="const" />
          <parameter name="AHelpContext" type="Integer" />
        </parameters>
      </constructor>
      <constructor name="CreateFmtHelp" visibility="public" file="System.SysUtils.pas" line="409">
        <parameters>
          <parameter name="Msg" type="string" paramflags="const" />
          <parameter name="Args" paramflags="const">
            <array name="Args">
              <element type="TVarRec" />
            </array>
          </parameter>
          <parameter name="AHelpContext" type="Integer" />
        </parameters>
      </constructor>
      <constructor name="CreateResHelp" visibility="public" file="System.SysUtils.pas" line="412">
        <parameters>
          <parameter name="Ident" type="NativeUInt" />
          <parameter name="AHelpContext" type="Integer" />
        </parameters>
      </constructor>
      <constructor name="CreateResHelp" visibility="public" file="System.SysUtils.pas" line="414">
        <parameters>
          <parameter name="ResStringRec" type="PResStringRec" />
          <parameter name="AHelpContext" type="Integer" />
        </parameters>
      </constructor>
      <constructor name="CreateResFmtHelp" visibility="public" file="System.SysUtils.pas" line="415">
        <parameters>
          <parameter name="ResStringRec" type="PResStringRec" />
          <parameter name="Args" paramflags="const">
            <array name="Args">
              <element type="TVarRec" />
            </array>
          </parameter>
          <parameter name="AHelpContext" type="Integer" />
        </parameters>
      </constructor>
      <constructor name="CreateResFmtHelp" visibility="public" file="System.SysUtils.pas" line="418">
        <parameters>
          <parameter name="Ident" type="NativeUInt" />
          <parameter name="Args" paramflags="const">
            <array name="Args">
              <element type="TVarRec" />
            </array>
          </parameter>
          <parameter name="AHelpContext" type="Integer" />
        </parameters>
      </constructor>
      <destructor name="Destroy" visibility="public" file="System.SysUtils.pas" line="421">
        <parameters>
        </parameters>
      </destructor>
      <function name="GetBaseException" visibility="public" procflags="virtual" file="System.SysUtils.pas" line="422">
        <parameters>
          <retval type="Exception" />
        </parameters>
      </function>
      <function name="ToString" visibility="public" procflags="override" file="System.SysUtils.pas" line="423">
        <parameters>
          <retval type="string" />
        </parameters>
      </function>
      <property name="BaseException" visibility="public" read="GetBaseException" type="Exception" file="System.SysUtils.pas" line="424">
      </property>
      <property name="HelpContext" visibility="public" read="FHelpContext" write="FHelpContext" type="Integer" file="System.SysUtils.pas" line="425">
      </property>
      <property name="InnerException" visibility="public" read="FInnerException" type="Exception" file="System.SysUtils.pas" line="426">
      </property>
      <property name="Message" visibility="public" read="FMessage" write="FMessage" type="string" default="0" file="System.SysUtils.pas" line="427">
      </property>
      <property name="StackTrace" visibility="public" read="GetStackTrace" type="string" default="0" file="System.SysUtils.pas" line="428">
      </property>
      <property name="StackInfo" visibility="public" read="FStackInfo" type="Pointer" file="System.SysUtils.pas" line="429">
      </property>
      <field name="GetExceptionStackInfoProc" visibility="public" varflags="class" file="System.SysUtils.pas" line="435">
      </field>
      <field name="GetStackInfoStringProc" visibility="public" varflags="class" file="System.SysUtils.pas" line="438">
      </field>
      <field name="CleanUpStackInfoProc" visibility="public" varflags="class" file="System.SysUtils.pas" line="441">
      </field>
      <procedure name="RaiseOuterException" visibility="public" procflags="static" file="System.SysUtils.pas" line="448">
        <parameters>
          <parameter name="E" type="Exception" />
        </parameters>
      </procedure>
      <procedure name="ThrowOuterException" visibility="public" procflags="static" file="System.SysUtils.pas" line="451">
        <parameters>
          <parameter name="E" type="Exception" />
        </parameters>
      </procedure>
    </members>
  </class>
  <classref name="ExceptClass" alias="System.SysUtils.ExceptClass" ref="Exception" file="System.SysUtils.pas" line="470" />
  <class name="EAbort" alias="System.SysUtils.EAbort" file="OverbyteIcsTypes.pas" line="221">
    <ancestor name="Exception" namespace="System.SysUtils">
      <methodref name="Create@" visibility="class private" procflags="class constructor noself">
      </methodref>
      <methodref name="Destroy@" visibility="class private" procflags="class destructor noself">
      </methodref>
      <methodref name="SetInnerException" visibility="protected">
      </methodref>
      <methodref name="SetStackInfo" visibility="protected">
      </methodref>
      <methodref name="GetStackTrace" visibility="protected">
      </methodref>
      <methodref name="RaisingException" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="Create" visibility="public" procflags="constructor">
      </methodref>
      <methodref name="CreateFmt" visibility="public" procflags="constructor">
      </methodref>
      <methodref name="CreateRes" visibility="public" procflags="constructor overload">
      </methodref>
      <methodref name="CreateRes" visibility="public" procflags="constructor overload">
      </methodref>
      <methodref name="CreateResFmt" visibility="public" procflags="constructor overload">
      </methodref>
      <methodref name="CreateResFmt" visibility="public" procflags="constructor overload">
      </methodref>
      <methodref name="CreateHelp" visibility="public" procflags="constructor">
      </methodref>
      <methodref name="CreateFmtHelp" visibility="public" procflags="constructor">
      </methodref>
      <methodref name="CreateResHelp" visibility="public" procflags="constructor overload">
      </methodref>
      <methodref name="CreateResHelp" visibility="public" procflags="constructor overload">
      </methodref>
      <methodref name="CreateResFmtHelp" visibility="public" procflags="constructor overload">
      </methodref>
      <methodref name="CreateResFmtHelp" visibility="public" procflags="constructor overload">
      </methodref>
      <methodref name="Destroy" visibility="public" procflags="destructor override">
      </methodref>
      <methodref name="GetBaseException" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="ToString" visibility="public" procflags="override">
      </methodref>
      <propertyref name="BaseException" visibility="public">
      </propertyref>
      <propertyref name="HelpContext" visibility="public">
      </propertyref>
      <propertyref name="InnerException" visibility="public">
      </propertyref>
      <propertyref name="Message" visibility="public">
      </propertyref>
      <propertyref name="StackTrace" visibility="public">
      </propertyref>
      <propertyref name="StackInfo" visibility="public">
      </propertyref>
      <methodref name="RaiseOuterException" visibility="public" procflags="static">
      </methodref>
      <methodref name="ThrowOuterException" visibility="public" procflags="static">
      </methodref>
      <ancestor name="TObject" namespace="System">
        <methodref name="Create" visibility="public" procflags="constructor">
        </methodref>
        <methodref name="Free" visibility="public">
        </methodref>
        <methodref name="DisposeOf" visibility="public" procflags="inline">
        </methodref>
        <methodref name="InitInstance" visibility="public" procflags="class">
        </methodref>
        <methodref name="CleanupInstance" visibility="public">
        </methodref>
        <methodref name="ClassType" visibility="public" procflags="inline">
        </methodref>
        <methodref name="ClassName" visibility="public" procflags="class">
        </methodref>
        <methodref name="ClassNameIs" visibility="public" procflags="class">
        </methodref>
        <methodref name="ClassParent" visibility="public" procflags="class">
        </methodref>
        <methodref name="ClassInfo" visibility="public" procflags="class inline">
        </methodref>
        <methodref name="InstanceSize" visibility="public" procflags="class inline">
        </methodref>
        <methodref name="InheritsFrom" visibility="public" procflags="class">
        </methodref>
        <methodref name="MethodAddress" visibility="public" procflags="class overload">
        </methodref>
        <methodref name="MethodAddress" visibility="public" procflags="class overload">
        </methodref>
        <methodref name="MethodName" visibility="public" procflags="class">
        </methodref>
        <methodref name="QualifiedClassName" visibility="public" procflags="class">
        </methodref>
        <methodref name="FieldAddress" visibility="public" procflags="overload">
        </methodref>
        <methodref name="FieldAddress" visibility="public" procflags="overload">
        </methodref>
        <methodref name="GetInterface" visibility="public">
        </methodref>
        <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
        </methodref>
        <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
        </methodref>
        <methodref name="UnitName" visibility="public" procflags="class">
        </methodref>
        <methodref name="UnitScope" visibility="public" procflags="class">
        </methodref>
        <methodref name="Equals" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="GetHashCode" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="ToString" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="SafeCallException" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="AfterConstruction" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="Dispatch" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="DefaultHandler" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="NewInstance" visibility="public" procflags="class virtual">
        </methodref>
        <methodref name="FreeInstance" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="Destroy" visibility="public" procflags="destructor virtual">
        </methodref>
        <methodref name="GetDisposed" visibility="protected" procflags="inline">
        </methodref>
        <methodref name="CheckDisposed" visibility="protected" procflags="inline">
        </methodref>
        <propertyref name="Disposed" visibility="protected">
        </propertyref>
      </ancestor>
    </ancestor>
  </class>
  <struct name="TSearchRec" alias="System.SysUtils.TSearchRec" size="624" file="OverbyteIcsTypes.pas" line="223">
    <function name="GetTimeStamp" visibility="private" file="System.SysUtils.pas" line="202">
      <parameters>
        <retval type="TDateTime" />
      </parameters>
    </function>
    <field name="Time" type="Integer" visibility="public" size="4" offset="0" file="System.SysUtils.pas" line="205" symflags="deprecated platform">
    </field>
    <field name="Size" type="Int64" visibility="public" size="8" offset="8" file="System.SysUtils.pas" line="210">
    </field>
    <field name="Attr" type="Integer" visibility="public" size="4" offset="16" file="System.SysUtils.pas" line="211">
    </field>
    <field name="Name" type="TFileName" visibility="public" size="4" offset="20" file="System.SysUtils.pas" line="212">
    </field>
    <field name="ExcludeAttr" type="Integer" visibility="public" size="4" offset="24" file="System.SysUtils.pas" line="213">
    </field>
    <field name="FindHandle" type="NativeUInt" visibility="public" size="4" offset="28" file="System.SysUtils.pas" line="215" symflags="platform">
    </field>
    <field name="FindData" type="_WIN32_FIND_DATAW" visibility="public" size="592" offset="32" file="System.SysUtils.pas" line="216" symflags="platform">
    </field>
    <property name="TimeStamp" visibility="public" read="GetTimeStamp" type="TDateTime" default="0" file="System.SysUtils.pas" line="224">
    </property>
  </struct>
  <set name="TReplaceFlags" alias="System.SysUtils.TReplaceFlags">
    <element name="rfReplaceAll" />
    <element name="rfIgnoreCase" />
  </set>
  <struct name="TMessage" alias="Winapi.Messages.TMessage" size="16" file="OverbyteIcsTypes.pas" line="227">
    <field name="Msg" type="Cardinal" visibility="public" size="4" offset="0" file="Winapi.Messages.pas" line="1054">
    </field>
    <field name="WParam" type="NativeUInt" visibility="public" variant="true" size="4" offset="4" file="Winapi.Messages.pas" line="1057">
    </field>
    <field name="LParam" type="NativeInt" visibility="public" variant="true" size="4" offset="8" file="Winapi.Messages.pas" line="1058">
    </field>
    <field name="Result" type="NativeInt" visibility="public" variant="true" size="4" offset="12" file="Winapi.Messages.pas" line="1059">
    </field>
    <field name="WParamLo" type="Word" visibility="public" variant="true" size="2" offset="4" file="Winapi.Messages.pas" line="1061">
    </field>
    <field name="WParamHi" type="Word" visibility="public" variant="true" size="2" offset="6" file="Winapi.Messages.pas" line="1062">
    </field>
    <field name="WParamFiller" type="TDWordFiller" visibility="public" variant="true" size="0" offset="8" file="Winapi.Messages.pas" line="1063">
    </field>
    <field name="LParamLo" type="Word" visibility="public" variant="true" size="2" offset="8" file="Winapi.Messages.pas" line="1064">
    </field>
    <field name="LParamHi" type="Word" visibility="public" variant="true" size="2" offset="10" file="Winapi.Messages.pas" line="1065">
    </field>
    <field name="LParamFiller" type="TDWordFiller" visibility="public" variant="true" size="0" offset="12" file="Winapi.Messages.pas" line="1066">
    </field>
    <field name="ResultLo" type="Word" visibility="public" variant="true" size="2" offset="12" file="Winapi.Messages.pas" line="1067">
    </field>
    <field name="ResultHi" type="Word" visibility="public" variant="true" size="2" offset="14" file="Winapi.Messages.pas" line="1068">
    </field>
    <field name="ResultFiller" type="TDWordFiller" visibility="public" variant="true" size="0" offset="16" file="Winapi.Messages.pas" line="1069">
    </field>
  </struct>
  <class name="TComponent" alias="System.Classes.TComponent" file="OverbyteIcsTypes.pas" line="229">
    <ancestor name="TPersistent" namespace="System.Classes">
      <methodref name="AssignError" visibility="private">
      </methodref>
      <methodref name="AssignTo" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="DefineProperties" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="GetOwner" visibility="protected" procflags="dynamic">
      </methodref>
      <methodref name="Destroy" visibility="public" procflags="destructor override">
      </methodref>
      <methodref name="Assign" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="GetNamePath" visibility="public" procflags="dynamic">
      </methodref>
      <ancestor name="TObject" namespace="System">
        <methodref name="Create" visibility="public" procflags="constructor">
        </methodref>
        <methodref name="Free" visibility="public">
        </methodref>
        <methodref name="DisposeOf" visibility="public" procflags="inline">
        </methodref>
        <methodref name="InitInstance" visibility="public" procflags="class">
        </methodref>
        <methodref name="CleanupInstance" visibility="public">
        </methodref>
        <methodref name="ClassType" visibility="public" procflags="inline">
        </methodref>
        <methodref name="ClassName" visibility="public" procflags="class">
        </methodref>
        <methodref name="ClassNameIs" visibility="public" procflags="class">
        </methodref>
        <methodref name="ClassParent" visibility="public" procflags="class">
        </methodref>
        <methodref name="ClassInfo" visibility="public" procflags="class inline">
        </methodref>
        <methodref name="InstanceSize" visibility="public" procflags="class inline">
        </methodref>
        <methodref name="InheritsFrom" visibility="public" procflags="class">
        </methodref>
        <methodref name="MethodAddress" visibility="public" procflags="class overload">
        </methodref>
        <methodref name="MethodAddress" visibility="public" procflags="class overload">
        </methodref>
        <methodref name="MethodName" visibility="public" procflags="class">
        </methodref>
        <methodref name="QualifiedClassName" visibility="public" procflags="class">
        </methodref>
        <methodref name="FieldAddress" visibility="public" procflags="overload">
        </methodref>
        <methodref name="FieldAddress" visibility="public" procflags="overload">
        </methodref>
        <methodref name="GetInterface" visibility="public">
        </methodref>
        <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
        </methodref>
        <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
        </methodref>
        <methodref name="UnitName" visibility="public" procflags="class">
        </methodref>
        <methodref name="UnitScope" visibility="public" procflags="class">
        </methodref>
        <methodref name="Equals" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="GetHashCode" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="ToString" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="SafeCallException" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="AfterConstruction" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="Dispatch" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="DefaultHandler" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="NewInstance" visibility="public" procflags="class virtual">
        </methodref>
        <methodref name="FreeInstance" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="Destroy" visibility="public" procflags="destructor virtual">
        </methodref>
        <methodref name="GetDisposed" visibility="protected" procflags="inline">
        </methodref>
        <methodref name="CheckDisposed" visibility="protected" procflags="inline">
        </methodref>
        <propertyref name="Disposed" visibility="protected">
        </propertyref>
      </ancestor>
    </ancestor>
    <interfaces>
      <implements name="IInterfaceComponentReference" />
      <implements name="IInterface" />
    </interfaces>
    <members>
      <class name="TComponentAsyncResult" visibility="protected" alias="System.Classes.TComponentAsyncResult" file="System.Classes.pas" line="2245">
        <ancestor name="TBaseAsyncResult" namespace="System.Classes">
          <interfaces>
            <implements name="IAsyncResult" />
          </interfaces>
          <methodref name="Create@" visibility="class private" procflags="class constructor noself">
          </methodref>
          <methodref name="Destroy@" visibility="class private" procflags="class destructor noself">
          </methodref>
          <methodref name="SetFlagsAtomic" visibility="private">
          </methodref>
          <methodref name="GetAsyncContext" visibility="private">
          </methodref>
          <methodref name="GetAsyncWaitEvent" visibility="private">
          </methodref>
          <methodref name="GetCompletedSynchronously" visibility="private">
          </methodref>
          <methodref name="GetIsCompleted" visibility="private">
          </methodref>
          <methodref name="GetIsCancelled" visibility="private">
          </methodref>
          <propertyref name="AsyncWaitEvent" visibility="private">
          </propertyref>
          <methodref name="AsyncDispatch" visibility="protected" procflags="abstract virtual">
          </methodref>
          <methodref name="Complete" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="DoAsyncDispatch" visibility="protected">
          </methodref>
          <methodref name="Schedule" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="Create" visibility="protected" procflags="constructor overload">
          </methodref>
          <propertyref name="Context" visibility="protected">
          </propertyref>
          <methodref name="DoCancel" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="Create" visibility="public" procflags="constructor overload">
          </methodref>
          <methodref name="Destroy" visibility="public" procflags="destructor override">
          </methodref>
          <methodref name="Cancel" visibility="public">
          </methodref>
          <methodref name="Invoke" visibility="public">
          </methodref>
          <methodref name="WaitForCompletion" visibility="public">
          </methodref>
          <methodref name="Dispatch" visibility="public" procflags="static inline">
          </methodref>
          <propertyref name="IsCancelled" visibility="public">
          </propertyref>
          <ancestor name="TInterfacedObject" namespace="System">
            <interfaces>
              <implements name="IInterface" />
            </interfaces>
            <methodref name="GetRefCount" visibility="private" procflags="inline">
            </methodref>
            <methodref name="__MarkDestroying" visibility="protected" procflags="static inline">
            </methodref>
            <methodref name="QueryInterface" visibility="protected">
            </methodref>
            <methodref name="_AddRef" visibility="protected">
            </methodref>
            <methodref name="_Release" visibility="protected">
            </methodref>
            <methodref name="AfterConstruction" visibility="public" procflags="override">
            </methodref>
            <methodref name="BeforeDestruction" visibility="public" procflags="override">
            </methodref>
            <methodref name="NewInstance" visibility="public" procflags="class override">
            </methodref>
            <propertyref name="RefCount" visibility="public">
            </propertyref>
            <ancestor name="TObject" namespace="System">
              <methodref name="Create" visibility="public" procflags="constructor">
              </methodref>
              <methodref name="Free" visibility="public">
              </methodref>
              <methodref name="DisposeOf" visibility="public" procflags="inline">
              </methodref>
              <methodref name="InitInstance" visibility="public" procflags="class">
              </methodref>
              <methodref name="CleanupInstance" visibility="public">
              </methodref>
              <methodref name="ClassType" visibility="public" procflags="inline">
              </methodref>
              <methodref name="ClassName" visibility="public" procflags="class">
              </methodref>
              <methodref name="ClassNameIs" visibility="public" procflags="class">
              </methodref>
              <methodref name="ClassParent" visibility="public" procflags="class">
              </methodref>
              <methodref name="ClassInfo" visibility="public" procflags="class inline">
              </methodref>
              <methodref name="InstanceSize" visibility="public" procflags="class inline">
              </methodref>
              <methodref name="InheritsFrom" visibility="public" procflags="class">
              </methodref>
              <methodref name="MethodAddress" visibility="public" procflags="class overload">
              </methodref>
              <methodref name="MethodAddress" visibility="public" procflags="class overload">
              </methodref>
              <methodref name="MethodName" visibility="public" procflags="class">
              </methodref>
              <methodref name="QualifiedClassName" visibility="public" procflags="class">
              </methodref>
              <methodref name="FieldAddress" visibility="public" procflags="overload">
              </methodref>
              <methodref name="FieldAddress" visibility="public" procflags="overload">
              </methodref>
              <methodref name="GetInterface" visibility="public">
              </methodref>
              <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
              </methodref>
              <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
              </methodref>
              <methodref name="UnitName" visibility="public" procflags="class">
              </methodref>
              <methodref name="UnitScope" visibility="public" procflags="class">
              </methodref>
              <methodref name="Equals" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="GetHashCode" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="ToString" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="SafeCallException" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="AfterConstruction" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="Dispatch" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="DefaultHandler" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="NewInstance" visibility="public" procflags="class virtual">
              </methodref>
              <methodref name="FreeInstance" visibility="public" procflags="virtual">
              </methodref>
              <methodref name="Destroy" visibility="public" procflags="destructor virtual">
              </methodref>
              <methodref name="GetDisposed" visibility="protected" procflags="inline">
              </methodref>
              <methodref name="CheckDisposed" visibility="protected" procflags="inline">
              </methodref>
              <propertyref name="Disposed" visibility="protected">
              </propertyref>
            </ancestor>
          </ancestor>
        </ancestor>
        <members>
          <field name="FComponent" type="TComponent" visibility="private" size="4" offset="36" file="System.Classes.pas" line="2247">
          </field>
          <procedure name="Schedule" visibility="protected" procflags="override" file="System.Classes.pas" line="2249">
          </procedure>
          <constructor name="Create" visibility="protected" file="System.Classes.pas" line="2250">
            <parameters>
              <parameter name="AContext" type="TObject" paramflags="const" />
              <parameter name="AComponent" type="TComponent" paramflags="const" />
            </parameters>
          </constructor>
        </members>
      </class>
      <class name="TAsyncConstArrayResult" visibility="protected" alias="System.Classes.TAsyncConstArrayResult" file="System.Classes.pas" line="2252">
        <ancestor name="TComponent.TComponentAsyncResult" namespace="System.Classes">
          <methodref name="Schedule" visibility="protected" procflags="override">
          </methodref>
          <methodref name="Create" visibility="protected" procflags="constructor">
          </methodref>
          <ancestor name="TBaseAsyncResult" namespace="System.Classes">
            <interfaces>
              <implements name="IAsyncResult" />
            </interfaces>
            <methodref name="Create@" visibility="class private" procflags="class constructor noself">
            </methodref>
            <methodref name="Destroy@" visibility="class private" procflags="class destructor noself">
            </methodref>
            <methodref name="SetFlagsAtomic" visibility="private">
            </methodref>
            <methodref name="GetAsyncContext" visibility="private">
            </methodref>
            <methodref name="GetAsyncWaitEvent" visibility="private">
            </methodref>
            <methodref name="GetCompletedSynchronously" visibility="private">
            </methodref>
            <methodref name="GetIsCompleted" visibility="private">
            </methodref>
            <methodref name="GetIsCancelled" visibility="private">
            </methodref>
            <propertyref name="AsyncWaitEvent" visibility="private">
            </propertyref>
            <methodref name="AsyncDispatch" visibility="protected" procflags="abstract virtual">
            </methodref>
            <methodref name="Complete" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="DoAsyncDispatch" visibility="protected">
            </methodref>
            <methodref name="Schedule" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="Create" visibility="protected" procflags="constructor overload">
            </methodref>
            <propertyref name="Context" visibility="protected">
            </propertyref>
            <methodref name="DoCancel" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="Create" visibility="public" procflags="constructor overload">
            </methodref>
            <methodref name="Destroy" visibility="public" procflags="destructor override">
            </methodref>
            <methodref name="Cancel" visibility="public">
            </methodref>
            <methodref name="Invoke" visibility="public">
            </methodref>
            <methodref name="WaitForCompletion" visibility="public">
            </methodref>
            <methodref name="Dispatch" visibility="public" procflags="static inline">
            </methodref>
            <propertyref name="IsCancelled" visibility="public">
            </propertyref>
            <ancestor name="TInterfacedObject" namespace="System">
              <interfaces>
                <implements name="IInterface" />
              </interfaces>
              <methodref name="GetRefCount" visibility="private" procflags="inline">
              </methodref>
              <methodref name="__MarkDestroying" visibility="protected" procflags="static inline">
              </methodref>
              <methodref name="QueryInterface" visibility="protected">
              </methodref>
              <methodref name="_AddRef" visibility="protected">
              </methodref>
              <methodref name="_Release" visibility="protected">
              </methodref>
              <methodref name="AfterConstruction" visibility="public" procflags="override">
              </methodref>
              <methodref name="BeforeDestruction" visibility="public" procflags="override">
              </methodref>
              <methodref name="NewInstance" visibility="public" procflags="class override">
              </methodref>
              <propertyref name="RefCount" visibility="public">
              </propertyref>
              <ancestor name="TObject" namespace="System">
                <methodref name="Create" visibility="public" procflags="constructor">
                </methodref>
                <methodref name="Free" visibility="public">
                </methodref>
                <methodref name="DisposeOf" visibility="public" procflags="inline">
                </methodref>
                <methodref name="InitInstance" visibility="public" procflags="class">
                </methodref>
                <methodref name="CleanupInstance" visibility="public">
                </methodref>
                <methodref name="ClassType" visibility="public" procflags="inline">
                </methodref>
                <methodref name="ClassName" visibility="public" procflags="class">
                </methodref>
                <methodref name="ClassNameIs" visibility="public" procflags="class">
                </methodref>
                <methodref name="ClassParent" visibility="public" procflags="class">
                </methodref>
                <methodref name="ClassInfo" visibility="public" procflags="class inline">
                </methodref>
                <methodref name="InstanceSize" visibility="public" procflags="class inline">
                </methodref>
                <methodref name="InheritsFrom" visibility="public" procflags="class">
                </methodref>
                <methodref name="MethodAddress" visibility="public" procflags="class overload">
                </methodref>
                <methodref name="MethodAddress" visibility="public" procflags="class overload">
                </methodref>
                <methodref name="MethodName" visibility="public" procflags="class">
                </methodref>
                <methodref name="QualifiedClassName" visibility="public" procflags="class">
                </methodref>
                <methodref name="FieldAddress" visibility="public" procflags="overload">
                </methodref>
                <methodref name="FieldAddress" visibility="public" procflags="overload">
                </methodref>
                <methodref name="GetInterface" visibility="public">
                </methodref>
                <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
                </methodref>
                <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
                </methodref>
                <methodref name="UnitName" visibility="public" procflags="class">
                </methodref>
                <methodref name="UnitScope" visibility="public" procflags="class">
                </methodref>
                <methodref name="Equals" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="GetHashCode" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="ToString" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="SafeCallException" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="AfterConstruction" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="Dispatch" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="DefaultHandler" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="NewInstance" visibility="public" procflags="class virtual">
                </methodref>
                <methodref name="FreeInstance" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="Destroy" visibility="public" procflags="destructor virtual">
                </methodref>
                <methodref name="GetDisposed" visibility="protected" procflags="inline">
                </methodref>
                <methodref name="CheckDisposed" visibility="protected" procflags="inline">
                </methodref>
                <propertyref name="Disposed" visibility="protected">
                </propertyref>
              </ancestor>
            </ancestor>
          </ancestor>
        </ancestor>
        <members>
          <field name="FParams" type="TArray&lt;System.Rtti.TValue&gt;" visibility="protected" size="4" offset="40" file="System.Classes.pas" line="2254">
          </field>
          <constructor name="Create" visibility="protected" file="System.Classes.pas" line="2255">
            <parameters>
              <parameter name="AContext" type="TObject" paramflags="const" />
              <parameter name="AComponent" type="TComponent" paramflags="const" />
              <parameter name="Params" paramflags="const">
                <array name="Params">
                  <element type="TVarRec" />
                </array>
              </parameter>
            </parameters>
          </constructor>
        </members>
      </class>
      <class name="TAsyncConstArrayProcResult" sealed="true" visibility="protected" alias="System.Classes.TAsyncConstArrayProcResult" file="System.Classes.pas" line="2257">
        <ancestor name="TComponent.TAsyncConstArrayResult" namespace="System.Classes">
          <methodref name="Create" visibility="protected" procflags="constructor">
          </methodref>
          <ancestor name="TComponent.TComponentAsyncResult" namespace="System.Classes">
            <methodref name="Schedule" visibility="protected" procflags="override">
            </methodref>
            <methodref name="Create" visibility="protected" procflags="constructor">
            </methodref>
            <ancestor name="TBaseAsyncResult" namespace="System.Classes">
              <interfaces>
                <implements name="IAsyncResult" />
              </interfaces>
              <methodref name="Create@" visibility="class private" procflags="class constructor noself">
              </methodref>
              <methodref name="Destroy@" visibility="class private" procflags="class destructor noself">
              </methodref>
              <methodref name="SetFlagsAtomic" visibility="private">
              </methodref>
              <methodref name="GetAsyncContext" visibility="private">
              </methodref>
              <methodref name="GetAsyncWaitEvent" visibility="private">
              </methodref>
              <methodref name="GetCompletedSynchronously" visibility="private">
              </methodref>
              <methodref name="GetIsCompleted" visibility="private">
              </methodref>
              <methodref name="GetIsCancelled" visibility="private">
              </methodref>
              <propertyref name="AsyncWaitEvent" visibility="private">
              </propertyref>
              <methodref name="AsyncDispatch" visibility="protected" procflags="abstract virtual">
              </methodref>
              <methodref name="Complete" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="DoAsyncDispatch" visibility="protected">
              </methodref>
              <methodref name="Schedule" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="Create" visibility="protected" procflags="constructor overload">
              </methodref>
              <propertyref name="Context" visibility="protected">
              </propertyref>
              <methodref name="DoCancel" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="Create" visibility="public" procflags="constructor overload">
              </methodref>
              <methodref name="Destroy" visibility="public" procflags="destructor override">
              </methodref>
              <methodref name="Cancel" visibility="public">
              </methodref>
              <methodref name="Invoke" visibility="public">
              </methodref>
              <methodref name="WaitForCompletion" visibility="public">
              </methodref>
              <methodref name="Dispatch" visibility="public" procflags="static inline">
              </methodref>
              <propertyref name="IsCancelled" visibility="public">
              </propertyref>
              <ancestor name="TInterfacedObject" namespace="System">
                <interfaces>
                  <implements name="IInterface" />
                </interfaces>
                <methodref name="GetRefCount" visibility="private" procflags="inline">
                </methodref>
                <methodref name="__MarkDestroying" visibility="protected" procflags="static inline">
                </methodref>
                <methodref name="QueryInterface" visibility="protected">
                </methodref>
                <methodref name="_AddRef" visibility="protected">
                </methodref>
                <methodref name="_Release" visibility="protected">
                </methodref>
                <methodref name="AfterConstruction" visibility="public" procflags="override">
                </methodref>
                <methodref name="BeforeDestruction" visibility="public" procflags="override">
                </methodref>
                <methodref name="NewInstance" visibility="public" procflags="class override">
                </methodref>
                <propertyref name="RefCount" visibility="public">
                </propertyref>
                <ancestor name="TObject" namespace="System">
                  <methodref name="Create" visibility="public" procflags="constructor">
                  </methodref>
                  <methodref name="Free" visibility="public">
                  </methodref>
                  <methodref name="DisposeOf" visibility="public" procflags="inline">
                  </methodref>
                  <methodref name="InitInstance" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="CleanupInstance" visibility="public">
                  </methodref>
                  <methodref name="ClassType" visibility="public" procflags="inline">
                  </methodref>
                  <methodref name="ClassName" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="ClassNameIs" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="ClassParent" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="ClassInfo" visibility="public" procflags="class inline">
                  </methodref>
                  <methodref name="InstanceSize" visibility="public" procflags="class inline">
                  </methodref>
                  <methodref name="InheritsFrom" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="MethodAddress" visibility="public" procflags="class overload">
                  </methodref>
                  <methodref name="MethodAddress" visibility="public" procflags="class overload">
                  </methodref>
                  <methodref name="MethodName" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="QualifiedClassName" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="FieldAddress" visibility="public" procflags="overload">
                  </methodref>
                  <methodref name="FieldAddress" visibility="public" procflags="overload">
                  </methodref>
                  <methodref name="GetInterface" visibility="public">
                  </methodref>
                  <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
                  </methodref>
                  <methodref name="UnitName" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="UnitScope" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="Equals" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="GetHashCode" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="ToString" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="SafeCallException" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="AfterConstruction" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="Dispatch" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="DefaultHandler" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="NewInstance" visibility="public" procflags="class virtual">
                  </methodref>
                  <methodref name="FreeInstance" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="Destroy" visibility="public" procflags="destructor virtual">
                  </methodref>
                  <methodref name="GetDisposed" visibility="protected" procflags="inline">
                  </methodref>
                  <methodref name="CheckDisposed" visibility="protected" procflags="inline">
                  </methodref>
                  <propertyref name="Disposed" visibility="protected">
                  </propertyref>
                </ancestor>
              </ancestor>
            </ancestor>
          </ancestor>
        </ancestor>
        <members>
          <field name="FAsyncProcedure" type="TAsyncConstArrayProc" visibility="private" size="4" offset="44" file="System.Classes.pas" line="2259">
          </field>
          <procedure name="AsyncDispatch" visibility="protected" procflags="override" file="System.Classes.pas" line="2261">
          </procedure>
          <constructor name="Create" visibility="protected" file="System.Classes.pas" line="2262">
            <parameters>
              <parameter name="AAsyncProcedure" type="TAsyncConstArrayProc" paramflags="const" />
              <parameter name="AContext" type="TObject" paramflags="const" />
              <parameter name="AComponent" type="TComponent" paramflags="const" />
              <parameter name="Params" paramflags="const">
                <array name="Params">
                  <element type="TVarRec" />
                </array>
              </parameter>
            </parameters>
          </constructor>
        </members>
      </class>
      <class name="TAsyncConstArrayFuncResult`1" sealed="true" visibility="protected" alias="System.Classes.TAsyncConstArrayFuncResult`1" file="System.Classes.pas" line="2264">
        <ancestor name="TComponent.TAsyncConstArrayResult" namespace="System.Classes">
          <methodref name="Create" visibility="protected" procflags="constructor">
          </methodref>
          <ancestor name="TComponent.TComponentAsyncResult" namespace="System.Classes">
            <methodref name="Schedule" visibility="protected" procflags="override">
            </methodref>
            <methodref name="Create" visibility="protected" procflags="constructor">
            </methodref>
            <ancestor name="TBaseAsyncResult" namespace="System.Classes">
              <interfaces>
                <implements name="IAsyncResult" />
              </interfaces>
              <methodref name="Create@" visibility="class private" procflags="class constructor noself">
              </methodref>
              <methodref name="Destroy@" visibility="class private" procflags="class destructor noself">
              </methodref>
              <methodref name="SetFlagsAtomic" visibility="private">
              </methodref>
              <methodref name="GetAsyncContext" visibility="private">
              </methodref>
              <methodref name="GetAsyncWaitEvent" visibility="private">
              </methodref>
              <methodref name="GetCompletedSynchronously" visibility="private">
              </methodref>
              <methodref name="GetIsCompleted" visibility="private">
              </methodref>
              <methodref name="GetIsCancelled" visibility="private">
              </methodref>
              <propertyref name="AsyncWaitEvent" visibility="private">
              </propertyref>
              <methodref name="AsyncDispatch" visibility="protected" procflags="abstract virtual">
              </methodref>
              <methodref name="Complete" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="DoAsyncDispatch" visibility="protected">
              </methodref>
              <methodref name="Schedule" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="Create" visibility="protected" procflags="constructor overload">
              </methodref>
              <propertyref name="Context" visibility="protected">
              </propertyref>
              <methodref name="DoCancel" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="Create" visibility="public" procflags="constructor overload">
              </methodref>
              <methodref name="Destroy" visibility="public" procflags="destructor override">
              </methodref>
              <methodref name="Cancel" visibility="public">
              </methodref>
              <methodref name="Invoke" visibility="public">
              </methodref>
              <methodref name="WaitForCompletion" visibility="public">
              </methodref>
              <methodref name="Dispatch" visibility="public" procflags="static inline">
              </methodref>
              <propertyref name="IsCancelled" visibility="public">
              </propertyref>
              <ancestor name="TInterfacedObject" namespace="System">
                <interfaces>
                  <implements name="IInterface" />
                </interfaces>
                <methodref name="GetRefCount" visibility="private" procflags="inline">
                </methodref>
                <methodref name="__MarkDestroying" visibility="protected" procflags="static inline">
                </methodref>
                <methodref name="QueryInterface" visibility="protected">
                </methodref>
                <methodref name="_AddRef" visibility="protected">
                </methodref>
                <methodref name="_Release" visibility="protected">
                </methodref>
                <methodref name="AfterConstruction" visibility="public" procflags="override">
                </methodref>
                <methodref name="BeforeDestruction" visibility="public" procflags="override">
                </methodref>
                <methodref name="NewInstance" visibility="public" procflags="class override">
                </methodref>
                <propertyref name="RefCount" visibility="public">
                </propertyref>
                <ancestor name="TObject" namespace="System">
                  <methodref name="Create" visibility="public" procflags="constructor">
                  </methodref>
                  <methodref name="Free" visibility="public">
                  </methodref>
                  <methodref name="DisposeOf" visibility="public" procflags="inline">
                  </methodref>
                  <methodref name="InitInstance" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="CleanupInstance" visibility="public">
                  </methodref>
                  <methodref name="ClassType" visibility="public" procflags="inline">
                  </methodref>
                  <methodref name="ClassName" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="ClassNameIs" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="ClassParent" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="ClassInfo" visibility="public" procflags="class inline">
                  </methodref>
                  <methodref name="InstanceSize" visibility="public" procflags="class inline">
                  </methodref>
                  <methodref name="InheritsFrom" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="MethodAddress" visibility="public" procflags="class overload">
                  </methodref>
                  <methodref name="MethodAddress" visibility="public" procflags="class overload">
                  </methodref>
                  <methodref name="MethodName" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="QualifiedClassName" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="FieldAddress" visibility="public" procflags="overload">
                  </methodref>
                  <methodref name="FieldAddress" visibility="public" procflags="overload">
                  </methodref>
                  <methodref name="GetInterface" visibility="public">
                  </methodref>
                  <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
                  </methodref>
                  <methodref name="UnitName" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="UnitScope" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="Equals" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="GetHashCode" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="ToString" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="SafeCallException" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="AfterConstruction" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="Dispatch" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="DefaultHandler" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="NewInstance" visibility="public" procflags="class virtual">
                  </methodref>
                  <methodref name="FreeInstance" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="Destroy" visibility="public" procflags="destructor virtual">
                  </methodref>
                  <methodref name="GetDisposed" visibility="protected" procflags="inline">
                  </methodref>
                  <methodref name="CheckDisposed" visibility="protected" procflags="inline">
                  </methodref>
                  <propertyref name="Disposed" visibility="protected">
                  </propertyref>
                </ancestor>
              </ancestor>
            </ancestor>
          </ancestor>
        </ancestor>
        <members>
          <field name="FRetVal" type="TResult" visibility="private" size="1" offset="44" file="System.Classes.pas" line="2266">
          </field>
          <field name="FAsyncFunction" visibility="private" size="4" offset="48" file="System.Classes.pas" line="2267">
          </field>
          <constructor name="Create" visibility="protected" file="System.Classes.pas" line="2269">
            <parameters>
              <parameter name="AAsyncFunction" paramflags="const">
              </parameter>
              <parameter name="AContext" type="TObject" paramflags="const" />
              <parameter name="AComponent" type="TComponent" paramflags="const" />
              <parameter name="Params" paramflags="const">
                <array name="Params">
                  <element type="TVarRec" />
                </array>
              </parameter>
            </parameters>
          </constructor>
          <procedure name="AsyncDispatch" visibility="protected" procflags="override" file="System.Classes.pas" line="2270">
          </procedure>
          <function name="GetRetVal" visibility="protected" file="System.Classes.pas" line="2271">
            <parameters>
              <retval type="TResult" />
            </parameters>
          </function>
        </members>
      </class>
      <class name="TAsyncConstArrayProcedureResult" sealed="true" visibility="protected" alias="System.Classes.TAsyncConstArrayProcedureResult" file="System.Classes.pas" line="2273">
        <ancestor name="TComponent.TAsyncConstArrayResult" namespace="System.Classes">
          <methodref name="Create" visibility="protected" procflags="constructor">
          </methodref>
          <ancestor name="TComponent.TComponentAsyncResult" namespace="System.Classes">
            <methodref name="Schedule" visibility="protected" procflags="override">
            </methodref>
            <methodref name="Create" visibility="protected" procflags="constructor">
            </methodref>
            <ancestor name="TBaseAsyncResult" namespace="System.Classes">
              <interfaces>
                <implements name="IAsyncResult" />
              </interfaces>
              <methodref name="Create@" visibility="class private" procflags="class constructor noself">
              </methodref>
              <methodref name="Destroy@" visibility="class private" procflags="class destructor noself">
              </methodref>
              <methodref name="SetFlagsAtomic" visibility="private">
              </methodref>
              <methodref name="GetAsyncContext" visibility="private">
              </methodref>
              <methodref name="GetAsyncWaitEvent" visibility="private">
              </methodref>
              <methodref name="GetCompletedSynchronously" visibility="private">
              </methodref>
              <methodref name="GetIsCompleted" visibility="private">
              </methodref>
              <methodref name="GetIsCancelled" visibility="private">
              </methodref>
              <propertyref name="AsyncWaitEvent" visibility="private">
              </propertyref>
              <methodref name="AsyncDispatch" visibility="protected" procflags="abstract virtual">
              </methodref>
              <methodref name="Complete" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="DoAsyncDispatch" visibility="protected">
              </methodref>
              <methodref name="Schedule" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="Create" visibility="protected" procflags="constructor overload">
              </methodref>
              <propertyref name="Context" visibility="protected">
              </propertyref>
              <methodref name="DoCancel" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="Create" visibility="public" procflags="constructor overload">
              </methodref>
              <methodref name="Destroy" visibility="public" procflags="destructor override">
              </methodref>
              <methodref name="Cancel" visibility="public">
              </methodref>
              <methodref name="Invoke" visibility="public">
              </methodref>
              <methodref name="WaitForCompletion" visibility="public">
              </methodref>
              <methodref name="Dispatch" visibility="public" procflags="static inline">
              </methodref>
              <propertyref name="IsCancelled" visibility="public">
              </propertyref>
              <ancestor name="TInterfacedObject" namespace="System">
                <interfaces>
                  <implements name="IInterface" />
                </interfaces>
                <methodref name="GetRefCount" visibility="private" procflags="inline">
                </methodref>
                <methodref name="__MarkDestroying" visibility="protected" procflags="static inline">
                </methodref>
                <methodref name="QueryInterface" visibility="protected">
                </methodref>
                <methodref name="_AddRef" visibility="protected">
                </methodref>
                <methodref name="_Release" visibility="protected">
                </methodref>
                <methodref name="AfterConstruction" visibility="public" procflags="override">
                </methodref>
                <methodref name="BeforeDestruction" visibility="public" procflags="override">
                </methodref>
                <methodref name="NewInstance" visibility="public" procflags="class override">
                </methodref>
                <propertyref name="RefCount" visibility="public">
                </propertyref>
                <ancestor name="TObject" namespace="System">
                  <methodref name="Create" visibility="public" procflags="constructor">
                  </methodref>
                  <methodref name="Free" visibility="public">
                  </methodref>
                  <methodref name="DisposeOf" visibility="public" procflags="inline">
                  </methodref>
                  <methodref name="InitInstance" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="CleanupInstance" visibility="public">
                  </methodref>
                  <methodref name="ClassType" visibility="public" procflags="inline">
                  </methodref>
                  <methodref name="ClassName" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="ClassNameIs" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="ClassParent" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="ClassInfo" visibility="public" procflags="class inline">
                  </methodref>
                  <methodref name="InstanceSize" visibility="public" procflags="class inline">
                  </methodref>
                  <methodref name="InheritsFrom" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="MethodAddress" visibility="public" procflags="class overload">
                  </methodref>
                  <methodref name="MethodAddress" visibility="public" procflags="class overload">
                  </methodref>
                  <methodref name="MethodName" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="QualifiedClassName" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="FieldAddress" visibility="public" procflags="overload">
                  </methodref>
                  <methodref name="FieldAddress" visibility="public" procflags="overload">
                  </methodref>
                  <methodref name="GetInterface" visibility="public">
                  </methodref>
                  <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
                  </methodref>
                  <methodref name="UnitName" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="UnitScope" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="Equals" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="GetHashCode" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="ToString" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="SafeCallException" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="AfterConstruction" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="Dispatch" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="DefaultHandler" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="NewInstance" visibility="public" procflags="class virtual">
                  </methodref>
                  <methodref name="FreeInstance" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="Destroy" visibility="public" procflags="destructor virtual">
                  </methodref>
                  <methodref name="GetDisposed" visibility="protected" procflags="inline">
                  </methodref>
                  <methodref name="CheckDisposed" visibility="protected" procflags="inline">
                  </methodref>
                  <propertyref name="Disposed" visibility="protected">
                  </propertyref>
                </ancestor>
              </ancestor>
            </ancestor>
          </ancestor>
        </ancestor>
        <members>
          <field name="FAsyncProcedure" type="TAsyncConstArrayProcedureEvent" visibility="private" size="8" offset="48" file="System.Classes.pas" line="2275">
          </field>
          <procedure name="AsyncDispatch" visibility="protected" procflags="override" file="System.Classes.pas" line="2277">
          </procedure>
          <constructor name="Create" visibility="protected" file="System.Classes.pas" line="2278">
            <parameters>
              <parameter name="AAsyncProcedure" type="TAsyncConstArrayProcedureEvent" paramflags="const" />
              <parameter name="AContext" type="TObject" paramflags="const" />
              <parameter name="AComponent" type="TComponent" paramflags="const" />
              <parameter name="Params" paramflags="const">
                <array name="Params">
                  <element type="TVarRec" />
                </array>
              </parameter>
            </parameters>
          </constructor>
        </members>
      </class>
      <class name="TAsyncConstArrayFunctionResult" sealed="true" visibility="protected" alias="System.Classes.TAsyncConstArrayFunctionResult" file="System.Classes.pas" line="2280">
        <ancestor name="TComponent.TAsyncConstArrayResult" namespace="System.Classes">
          <methodref name="Create" visibility="protected" procflags="constructor">
          </methodref>
          <ancestor name="TComponent.TComponentAsyncResult" namespace="System.Classes">
            <methodref name="Schedule" visibility="protected" procflags="override">
            </methodref>
            <methodref name="Create" visibility="protected" procflags="constructor">
            </methodref>
            <ancestor name="TBaseAsyncResult" namespace="System.Classes">
              <interfaces>
                <implements name="IAsyncResult" />
              </interfaces>
              <methodref name="Create@" visibility="class private" procflags="class constructor noself">
              </methodref>
              <methodref name="Destroy@" visibility="class private" procflags="class destructor noself">
              </methodref>
              <methodref name="SetFlagsAtomic" visibility="private">
              </methodref>
              <methodref name="GetAsyncContext" visibility="private">
              </methodref>
              <methodref name="GetAsyncWaitEvent" visibility="private">
              </methodref>
              <methodref name="GetCompletedSynchronously" visibility="private">
              </methodref>
              <methodref name="GetIsCompleted" visibility="private">
              </methodref>
              <methodref name="GetIsCancelled" visibility="private">
              </methodref>
              <propertyref name="AsyncWaitEvent" visibility="private">
              </propertyref>
              <methodref name="AsyncDispatch" visibility="protected" procflags="abstract virtual">
              </methodref>
              <methodref name="Complete" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="DoAsyncDispatch" visibility="protected">
              </methodref>
              <methodref name="Schedule" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="Create" visibility="protected" procflags="constructor overload">
              </methodref>
              <propertyref name="Context" visibility="protected">
              </propertyref>
              <methodref name="DoCancel" visibility="protected" procflags="virtual">
              </methodref>
              <methodref name="Create" visibility="public" procflags="constructor overload">
              </methodref>
              <methodref name="Destroy" visibility="public" procflags="destructor override">
              </methodref>
              <methodref name="Cancel" visibility="public">
              </methodref>
              <methodref name="Invoke" visibility="public">
              </methodref>
              <methodref name="WaitForCompletion" visibility="public">
              </methodref>
              <methodref name="Dispatch" visibility="public" procflags="static inline">
              </methodref>
              <propertyref name="IsCancelled" visibility="public">
              </propertyref>
              <ancestor name="TInterfacedObject" namespace="System">
                <interfaces>
                  <implements name="IInterface" />
                </interfaces>
                <methodref name="GetRefCount" visibility="private" procflags="inline">
                </methodref>
                <methodref name="__MarkDestroying" visibility="protected" procflags="static inline">
                </methodref>
                <methodref name="QueryInterface" visibility="protected">
                </methodref>
                <methodref name="_AddRef" visibility="protected">
                </methodref>
                <methodref name="_Release" visibility="protected">
                </methodref>
                <methodref name="AfterConstruction" visibility="public" procflags="override">
                </methodref>
                <methodref name="BeforeDestruction" visibility="public" procflags="override">
                </methodref>
                <methodref name="NewInstance" visibility="public" procflags="class override">
                </methodref>
                <propertyref name="RefCount" visibility="public">
                </propertyref>
                <ancestor name="TObject" namespace="System">
                  <methodref name="Create" visibility="public" procflags="constructor">
                  </methodref>
                  <methodref name="Free" visibility="public">
                  </methodref>
                  <methodref name="DisposeOf" visibility="public" procflags="inline">
                  </methodref>
                  <methodref name="InitInstance" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="CleanupInstance" visibility="public">
                  </methodref>
                  <methodref name="ClassType" visibility="public" procflags="inline">
                  </methodref>
                  <methodref name="ClassName" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="ClassNameIs" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="ClassParent" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="ClassInfo" visibility="public" procflags="class inline">
                  </methodref>
                  <methodref name="InstanceSize" visibility="public" procflags="class inline">
                  </methodref>
                  <methodref name="InheritsFrom" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="MethodAddress" visibility="public" procflags="class overload">
                  </methodref>
                  <methodref name="MethodAddress" visibility="public" procflags="class overload">
                  </methodref>
                  <methodref name="MethodName" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="QualifiedClassName" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="FieldAddress" visibility="public" procflags="overload">
                  </methodref>
                  <methodref name="FieldAddress" visibility="public" procflags="overload">
                  </methodref>
                  <methodref name="GetInterface" visibility="public">
                  </methodref>
                  <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
                  </methodref>
                  <methodref name="UnitName" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="UnitScope" visibility="public" procflags="class">
                  </methodref>
                  <methodref name="Equals" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="GetHashCode" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="ToString" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="SafeCallException" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="AfterConstruction" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="Dispatch" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="DefaultHandler" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="NewInstance" visibility="public" procflags="class virtual">
                  </methodref>
                  <methodref name="FreeInstance" visibility="public" procflags="virtual">
                  </methodref>
                  <methodref name="Destroy" visibility="public" procflags="destructor virtual">
                  </methodref>
                  <methodref name="GetDisposed" visibility="protected" procflags="inline">
                  </methodref>
                  <methodref name="CheckDisposed" visibility="protected" procflags="inline">
                  </methodref>
                  <propertyref name="Disposed" visibility="protected">
                  </propertyref>
                </ancestor>
              </ancestor>
            </ancestor>
          </ancestor>
        </ancestor>
        <members>
          <field name="FRetVal" type="TObject" visibility="private" size="4" offset="44" file="System.Classes.pas" line="2282">
          </field>
          <field name="FAsyncFunction" type="TAsyncConstArrayFunctionEvent" visibility="private" size="8" offset="48" file="System.Classes.pas" line="2283">
          </field>
          <constructor name="Create" visibility="protected" file="System.Classes.pas" line="2285">
            <parameters>
              <parameter name="AAsyncFunction" type="TAsyncConstArrayFunctionEvent" paramflags="const" />
              <parameter name="AContext" type="TObject" paramflags="const" />
              <parameter name="AComponent" type="TComponent" paramflags="const" />
              <parameter name="Params" paramflags="const">
                <array name="Params">
                  <element type="TVarRec" />
                </array>
              </parameter>
            </parameters>
          </constructor>
          <procedure name="AsyncDispatch" visibility="protected" procflags="override" file="System.Classes.pas" line="2286">
          </procedure>
          <function name="GetRetVal" visibility="protected" file="System.Classes.pas" line="2287">
            <parameters>
              <retval type="TObject" />
            </parameters>
          </function>
        </members>
      </class>
      <class name="TAsyncProcedureResult" sealed="true" visibility="protected" alias="System.Classes.TAsyncProcedureResult" file="System.Classes.pas" line="2289">
        <ancestor name="TComponent.TComponentAsyncResult" namespace="System.Classes">
          <methodref name="Schedule" visibility="protected" procflags="override">
          </methodref>
          <methodref name="Create" visibility="protected" procflags="constructor">
          </methodref>
          <ancestor name="TBaseAsyncResult" namespace="System.Classes">
            <interfaces>
              <implements name="IAsyncResult" />
            </interfaces>
            <methodref name="Create@" visibility="class private" procflags="class constructor noself">
            </methodref>
            <methodref name="Destroy@" visibility="class private" procflags="class destructor noself">
            </methodref>
            <methodref name="SetFlagsAtomic" visibility="private">
            </methodref>
            <methodref name="GetAsyncContext" visibility="private">
            </methodref>
            <methodref name="GetAsyncWaitEvent" visibility="private">
            </methodref>
            <methodref name="GetCompletedSynchronously" visibility="private">
            </methodref>
            <methodref name="GetIsCompleted" visibility="private">
            </methodref>
            <methodref name="GetIsCancelled" visibility="private">
            </methodref>
            <propertyref name="AsyncWaitEvent" visibility="private">
            </propertyref>
            <methodref name="AsyncDispatch" visibility="protected" procflags="abstract virtual">
            </methodref>
            <methodref name="Complete" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="DoAsyncDispatch" visibility="protected">
            </methodref>
            <methodref name="Schedule" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="Create" visibility="protected" procflags="constructor overload">
            </methodref>
            <propertyref name="Context" visibility="protected">
            </propertyref>
            <methodref name="DoCancel" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="Create" visibility="public" procflags="constructor overload">
            </methodref>
            <methodref name="Destroy" visibility="public" procflags="destructor override">
            </methodref>
            <methodref name="Cancel" visibility="public">
            </methodref>
            <methodref name="Invoke" visibility="public">
            </methodref>
            <methodref name="WaitForCompletion" visibility="public">
            </methodref>
            <methodref name="Dispatch" visibility="public" procflags="static inline">
            </methodref>
            <propertyref name="IsCancelled" visibility="public">
            </propertyref>
            <ancestor name="TInterfacedObject" namespace="System">
              <interfaces>
                <implements name="IInterface" />
              </interfaces>
              <methodref name="GetRefCount" visibility="private" procflags="inline">
              </methodref>
              <methodref name="__MarkDestroying" visibility="protected" procflags="static inline">
              </methodref>
              <methodref name="QueryInterface" visibility="protected">
              </methodref>
              <methodref name="_AddRef" visibility="protected">
              </methodref>
              <methodref name="_Release" visibility="protected">
              </methodref>
              <methodref name="AfterConstruction" visibility="public" procflags="override">
              </methodref>
              <methodref name="BeforeDestruction" visibility="public" procflags="override">
              </methodref>
              <methodref name="NewInstance" visibility="public" procflags="class override">
              </methodref>
              <propertyref name="RefCount" visibility="public">
              </propertyref>
              <ancestor name="TObject" namespace="System">
                <methodref name="Create" visibility="public" procflags="constructor">
                </methodref>
                <methodref name="Free" visibility="public">
                </methodref>
                <methodref name="DisposeOf" visibility="public" procflags="inline">
                </methodref>
                <methodref name="InitInstance" visibility="public" procflags="class">
                </methodref>
                <methodref name="CleanupInstance" visibility="public">
                </methodref>
                <methodref name="ClassType" visibility="public" procflags="inline">
                </methodref>
                <methodref name="ClassName" visibility="public" procflags="class">
                </methodref>
                <methodref name="ClassNameIs" visibility="public" procflags="class">
                </methodref>
                <methodref name="ClassParent" visibility="public" procflags="class">
                </methodref>
                <methodref name="ClassInfo" visibility="public" procflags="class inline">
                </methodref>
                <methodref name="InstanceSize" visibility="public" procflags="class inline">
                </methodref>
                <methodref name="InheritsFrom" visibility="public" procflags="class">
                </methodref>
                <methodref name="MethodAddress" visibility="public" procflags="class overload">
                </methodref>
                <methodref name="MethodAddress" visibility="public" procflags="class overload">
                </methodref>
                <methodref name="MethodName" visibility="public" procflags="class">
                </methodref>
                <methodref name="QualifiedClassName" visibility="public" procflags="class">
                </methodref>
                <methodref name="FieldAddress" visibility="public" procflags="overload">
                </methodref>
                <methodref name="FieldAddress" visibility="public" procflags="overload">
                </methodref>
                <methodref name="GetInterface" visibility="public">
                </methodref>
                <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
                </methodref>
                <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
                </methodref>
                <methodref name="UnitName" visibility="public" procflags="class">
                </methodref>
                <methodref name="UnitScope" visibility="public" procflags="class">
                </methodref>
                <methodref name="Equals" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="GetHashCode" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="ToString" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="SafeCallException" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="AfterConstruction" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="Dispatch" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="DefaultHandler" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="NewInstance" visibility="public" procflags="class virtual">
                </methodref>
                <methodref name="FreeInstance" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="Destroy" visibility="public" procflags="destructor virtual">
                </methodref>
                <methodref name="GetDisposed" visibility="protected" procflags="inline">
                </methodref>
                <methodref name="CheckDisposed" visibility="protected" procflags="inline">
                </methodref>
                <propertyref name="Disposed" visibility="protected">
                </propertyref>
              </ancestor>
            </ancestor>
          </ancestor>
        </ancestor>
        <members>
          <field name="FAsyncProcedure" type="TProc" visibility="private" size="4" offset="40" file="System.Classes.pas" line="2291">
          </field>
          <constructor name="Create" visibility="protected" file="System.Classes.pas" line="2293">
            <parameters>
              <parameter name="AAsyncProcedure" type="TProc" paramflags="const" />
              <parameter name="AContext" type="TObject" paramflags="const" />
              <parameter name="AComponent" type="TComponent" paramflags="const" />
            </parameters>
          </constructor>
          <procedure name="AsyncDispatch" visibility="protected" procflags="override" file="System.Classes.pas" line="2294">
          </procedure>
        </members>
      </class>
      <class name="TAsyncFunctionResult`1" sealed="true" visibility="protected" alias="System.Classes.TAsyncFunctionResult`1" file="System.Classes.pas" line="2296">
        <ancestor name="TComponent.TComponentAsyncResult" namespace="System.Classes">
          <methodref name="Schedule" visibility="protected" procflags="override">
          </methodref>
          <methodref name="Create" visibility="protected" procflags="constructor">
          </methodref>
          <ancestor name="TBaseAsyncResult" namespace="System.Classes">
            <interfaces>
              <implements name="IAsyncResult" />
            </interfaces>
            <methodref name="Create@" visibility="class private" procflags="class constructor noself">
            </methodref>
            <methodref name="Destroy@" visibility="class private" procflags="class destructor noself">
            </methodref>
            <methodref name="SetFlagsAtomic" visibility="private">
            </methodref>
            <methodref name="GetAsyncContext" visibility="private">
            </methodref>
            <methodref name="GetAsyncWaitEvent" visibility="private">
            </methodref>
            <methodref name="GetCompletedSynchronously" visibility="private">
            </methodref>
            <methodref name="GetIsCompleted" visibility="private">
            </methodref>
            <methodref name="GetIsCancelled" visibility="private">
            </methodref>
            <propertyref name="AsyncWaitEvent" visibility="private">
            </propertyref>
            <methodref name="AsyncDispatch" visibility="protected" procflags="abstract virtual">
            </methodref>
            <methodref name="Complete" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="DoAsyncDispatch" visibility="protected">
            </methodref>
            <methodref name="Schedule" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="Create" visibility="protected" procflags="constructor overload">
            </methodref>
            <propertyref name="Context" visibility="protected">
            </propertyref>
            <methodref name="DoCancel" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="Create" visibility="public" procflags="constructor overload">
            </methodref>
            <methodref name="Destroy" visibility="public" procflags="destructor override">
            </methodref>
            <methodref name="Cancel" visibility="public">
            </methodref>
            <methodref name="Invoke" visibility="public">
            </methodref>
            <methodref name="WaitForCompletion" visibility="public">
            </methodref>
            <methodref name="Dispatch" visibility="public" procflags="static inline">
            </methodref>
            <propertyref name="IsCancelled" visibility="public">
            </propertyref>
            <ancestor name="TInterfacedObject" namespace="System">
              <interfaces>
                <implements name="IInterface" />
              </interfaces>
              <methodref name="GetRefCount" visibility="private" procflags="inline">
              </methodref>
              <methodref name="__MarkDestroying" visibility="protected" procflags="static inline">
              </methodref>
              <methodref name="QueryInterface" visibility="protected">
              </methodref>
              <methodref name="_AddRef" visibility="protected">
              </methodref>
              <methodref name="_Release" visibility="protected">
              </methodref>
              <methodref name="AfterConstruction" visibility="public" procflags="override">
              </methodref>
              <methodref name="BeforeDestruction" visibility="public" procflags="override">
              </methodref>
              <methodref name="NewInstance" visibility="public" procflags="class override">
              </methodref>
              <propertyref name="RefCount" visibility="public">
              </propertyref>
              <ancestor name="TObject" namespace="System">
                <methodref name="Create" visibility="public" procflags="constructor">
                </methodref>
                <methodref name="Free" visibility="public">
                </methodref>
                <methodref name="DisposeOf" visibility="public" procflags="inline">
                </methodref>
                <methodref name="InitInstance" visibility="public" procflags="class">
                </methodref>
                <methodref name="CleanupInstance" visibility="public">
                </methodref>
                <methodref name="ClassType" visibility="public" procflags="inline">
                </methodref>
                <methodref name="ClassName" visibility="public" procflags="class">
                </methodref>
                <methodref name="ClassNameIs" visibility="public" procflags="class">
                </methodref>
                <methodref name="ClassParent" visibility="public" procflags="class">
                </methodref>
                <methodref name="ClassInfo" visibility="public" procflags="class inline">
                </methodref>
                <methodref name="InstanceSize" visibility="public" procflags="class inline">
                </methodref>
                <methodref name="InheritsFrom" visibility="public" procflags="class">
                </methodref>
                <methodref name="MethodAddress" visibility="public" procflags="class overload">
                </methodref>
                <methodref name="MethodAddress" visibility="public" procflags="class overload">
                </methodref>
                <methodref name="MethodName" visibility="public" procflags="class">
                </methodref>
                <methodref name="QualifiedClassName" visibility="public" procflags="class">
                </methodref>
                <methodref name="FieldAddress" visibility="public" procflags="overload">
                </methodref>
                <methodref name="FieldAddress" visibility="public" procflags="overload">
                </methodref>
                <methodref name="GetInterface" visibility="public">
                </methodref>
                <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
                </methodref>
                <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
                </methodref>
                <methodref name="UnitName" visibility="public" procflags="class">
                </methodref>
                <methodref name="UnitScope" visibility="public" procflags="class">
                </methodref>
                <methodref name="Equals" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="GetHashCode" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="ToString" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="SafeCallException" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="AfterConstruction" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="Dispatch" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="DefaultHandler" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="NewInstance" visibility="public" procflags="class virtual">
                </methodref>
                <methodref name="FreeInstance" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="Destroy" visibility="public" procflags="destructor virtual">
                </methodref>
                <methodref name="GetDisposed" visibility="protected" procflags="inline">
                </methodref>
                <methodref name="CheckDisposed" visibility="protected" procflags="inline">
                </methodref>
                <propertyref name="Disposed" visibility="protected">
                </propertyref>
              </ancestor>
            </ancestor>
          </ancestor>
        </ancestor>
        <members>
          <field name="FRetVal" type="TResult" visibility="private" size="1" offset="40" file="System.Classes.pas" line="2298">
          </field>
          <field name="FAsyncFunction" visibility="private" size="4" offset="44" file="System.Classes.pas" line="2299">
          </field>
          <constructor name="Create" visibility="protected" file="System.Classes.pas" line="2301">
            <parameters>
              <parameter name="AAsyncFunction" paramflags="const">
              </parameter>
              <parameter name="AContext" type="TObject" paramflags="const" />
              <parameter name="AComponent" type="TComponent" paramflags="const" />
            </parameters>
          </constructor>
          <procedure name="AsyncDispatch" visibility="protected" procflags="override" file="System.Classes.pas" line="2302">
          </procedure>
          <function name="GetRetVal" visibility="protected" file="System.Classes.pas" line="2303">
            <parameters>
              <retval type="TResult" />
            </parameters>
          </function>
        </members>
      </class>
      <class name="TAsyncProcedureResultEvent" sealed="true" visibility="protected" alias="System.Classes.TAsyncProcedureResultEvent" file="System.Classes.pas" line="2305">
        <ancestor name="TComponent.TComponentAsyncResult" namespace="System.Classes">
          <methodref name="Schedule" visibility="protected" procflags="override">
          </methodref>
          <methodref name="Create" visibility="protected" procflags="constructor">
          </methodref>
          <ancestor name="TBaseAsyncResult" namespace="System.Classes">
            <interfaces>
              <implements name="IAsyncResult" />
            </interfaces>
            <methodref name="Create@" visibility="class private" procflags="class constructor noself">
            </methodref>
            <methodref name="Destroy@" visibility="class private" procflags="class destructor noself">
            </methodref>
            <methodref name="SetFlagsAtomic" visibility="private">
            </methodref>
            <methodref name="GetAsyncContext" visibility="private">
            </methodref>
            <methodref name="GetAsyncWaitEvent" visibility="private">
            </methodref>
            <methodref name="GetCompletedSynchronously" visibility="private">
            </methodref>
            <methodref name="GetIsCompleted" visibility="private">
            </methodref>
            <methodref name="GetIsCancelled" visibility="private">
            </methodref>
            <propertyref name="AsyncWaitEvent" visibility="private">
            </propertyref>
            <methodref name="AsyncDispatch" visibility="protected" procflags="abstract virtual">
            </methodref>
            <methodref name="Complete" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="DoAsyncDispatch" visibility="protected">
            </methodref>
            <methodref name="Schedule" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="Create" visibility="protected" procflags="constructor overload">
            </methodref>
            <propertyref name="Context" visibility="protected">
            </propertyref>
            <methodref name="DoCancel" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="Create" visibility="public" procflags="constructor overload">
            </methodref>
            <methodref name="Destroy" visibility="public" procflags="destructor override">
            </methodref>
            <methodref name="Cancel" visibility="public">
            </methodref>
            <methodref name="Invoke" visibility="public">
            </methodref>
            <methodref name="WaitForCompletion" visibility="public">
            </methodref>
            <methodref name="Dispatch" visibility="public" procflags="static inline">
            </methodref>
            <propertyref name="IsCancelled" visibility="public">
            </propertyref>
            <ancestor name="TInterfacedObject" namespace="System">
              <interfaces>
                <implements name="IInterface" />
              </interfaces>
              <methodref name="GetRefCount" visibility="private" procflags="inline">
              </methodref>
              <methodref name="__MarkDestroying" visibility="protected" procflags="static inline">
              </methodref>
              <methodref name="QueryInterface" visibility="protected">
              </methodref>
              <methodref name="_AddRef" visibility="protected">
              </methodref>
              <methodref name="_Release" visibility="protected">
              </methodref>
              <methodref name="AfterConstruction" visibility="public" procflags="override">
              </methodref>
              <methodref name="BeforeDestruction" visibility="public" procflags="override">
              </methodref>
              <methodref name="NewInstance" visibility="public" procflags="class override">
              </methodref>
              <propertyref name="RefCount" visibility="public">
              </propertyref>
              <ancestor name="TObject" namespace="System">
                <methodref name="Create" visibility="public" procflags="constructor">
                </methodref>
                <methodref name="Free" visibility="public">
                </methodref>
                <methodref name="DisposeOf" visibility="public" procflags="inline">
                </methodref>
                <methodref name="InitInstance" visibility="public" procflags="class">
                </methodref>
                <methodref name="CleanupInstance" visibility="public">
                </methodref>
                <methodref name="ClassType" visibility="public" procflags="inline">
                </methodref>
                <methodref name="ClassName" visibility="public" procflags="class">
                </methodref>
                <methodref name="ClassNameIs" visibility="public" procflags="class">
                </methodref>
                <methodref name="ClassParent" visibility="public" procflags="class">
                </methodref>
                <methodref name="ClassInfo" visibility="public" procflags="class inline">
                </methodref>
                <methodref name="InstanceSize" visibility="public" procflags="class inline">
                </methodref>
                <methodref name="InheritsFrom" visibility="public" procflags="class">
                </methodref>
                <methodref name="MethodAddress" visibility="public" procflags="class overload">
                </methodref>
                <methodref name="MethodAddress" visibility="public" procflags="class overload">
                </methodref>
                <methodref name="MethodName" visibility="public" procflags="class">
                </methodref>
                <methodref name="QualifiedClassName" visibility="public" procflags="class">
                </methodref>
                <methodref name="FieldAddress" visibility="public" procflags="overload">
                </methodref>
                <methodref name="FieldAddress" visibility="public" procflags="overload">
                </methodref>
                <methodref name="GetInterface" visibility="public">
                </methodref>
                <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
                </methodref>
                <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
                </methodref>
                <methodref name="UnitName" visibility="public" procflags="class">
                </methodref>
                <methodref name="UnitScope" visibility="public" procflags="class">
                </methodref>
                <methodref name="Equals" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="GetHashCode" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="ToString" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="SafeCallException" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="AfterConstruction" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="Dispatch" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="DefaultHandler" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="NewInstance" visibility="public" procflags="class virtual">
                </methodref>
                <methodref name="FreeInstance" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="Destroy" visibility="public" procflags="destructor virtual">
                </methodref>
                <methodref name="GetDisposed" visibility="protected" procflags="inline">
                </methodref>
                <methodref name="CheckDisposed" visibility="protected" procflags="inline">
                </methodref>
                <propertyref name="Disposed" visibility="protected">
                </propertyref>
              </ancestor>
            </ancestor>
          </ancestor>
        </ancestor>
        <members>
          <field name="FAsyncProcedure" type="TAsyncProcedureEvent" visibility="private" size="8" offset="40" file="System.Classes.pas" line="2307">
          </field>
          <constructor name="Create" visibility="protected" file="System.Classes.pas" line="2309">
            <parameters>
              <parameter name="AAsyncProcedure" type="TAsyncProcedureEvent" paramflags="const" />
              <parameter name="AContext" type="TObject" paramflags="const" />
              <parameter name="AComponent" type="TComponent" paramflags="const" />
            </parameters>
          </constructor>
          <procedure name="AsyncDispatch" visibility="protected" procflags="override" file="System.Classes.pas" line="2310">
          </procedure>
        </members>
      </class>
      <class name="TAsyncFunctionResultEvent" sealed="true" visibility="protected" alias="System.Classes.TAsyncFunctionResultEvent" file="System.Classes.pas" line="2312">
        <ancestor name="TComponent.TComponentAsyncResult" namespace="System.Classes">
          <methodref name="Schedule" visibility="protected" procflags="override">
          </methodref>
          <methodref name="Create" visibility="protected" procflags="constructor">
          </methodref>
          <ancestor name="TBaseAsyncResult" namespace="System.Classes">
            <interfaces>
              <implements name="IAsyncResult" />
            </interfaces>
            <methodref name="Create@" visibility="class private" procflags="class constructor noself">
            </methodref>
            <methodref name="Destroy@" visibility="class private" procflags="class destructor noself">
            </methodref>
            <methodref name="SetFlagsAtomic" visibility="private">
            </methodref>
            <methodref name="GetAsyncContext" visibility="private">
            </methodref>
            <methodref name="GetAsyncWaitEvent" visibility="private">
            </methodref>
            <methodref name="GetCompletedSynchronously" visibility="private">
            </methodref>
            <methodref name="GetIsCompleted" visibility="private">
            </methodref>
            <methodref name="GetIsCancelled" visibility="private">
            </methodref>
            <propertyref name="AsyncWaitEvent" visibility="private">
            </propertyref>
            <methodref name="AsyncDispatch" visibility="protected" procflags="abstract virtual">
            </methodref>
            <methodref name="Complete" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="DoAsyncDispatch" visibility="protected">
            </methodref>
            <methodref name="Schedule" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="Create" visibility="protected" procflags="constructor overload">
            </methodref>
            <propertyref name="Context" visibility="protected">
            </propertyref>
            <methodref name="DoCancel" visibility="protected" procflags="virtual">
            </methodref>
            <methodref name="Create" visibility="public" procflags="constructor overload">
            </methodref>
            <methodref name="Destroy" visibility="public" procflags="destructor override">
            </methodref>
            <methodref name="Cancel" visibility="public">
            </methodref>
            <methodref name="Invoke" visibility="public">
            </methodref>
            <methodref name="WaitForCompletion" visibility="public">
            </methodref>
            <methodref name="Dispatch" visibility="public" procflags="static inline">
            </methodref>
            <propertyref name="IsCancelled" visibility="public">
            </propertyref>
            <ancestor name="TInterfacedObject" namespace="System">
              <interfaces>
                <implements name="IInterface" />
              </interfaces>
              <methodref name="GetRefCount" visibility="private" procflags="inline">
              </methodref>
              <methodref name="__MarkDestroying" visibility="protected" procflags="static inline">
              </methodref>
              <methodref name="QueryInterface" visibility="protected">
              </methodref>
              <methodref name="_AddRef" visibility="protected">
              </methodref>
              <methodref name="_Release" visibility="protected">
              </methodref>
              <methodref name="AfterConstruction" visibility="public" procflags="override">
              </methodref>
              <methodref name="BeforeDestruction" visibility="public" procflags="override">
              </methodref>
              <methodref name="NewInstance" visibility="public" procflags="class override">
              </methodref>
              <propertyref name="RefCount" visibility="public">
              </propertyref>
              <ancestor name="TObject" namespace="System">
                <methodref name="Create" visibility="public" procflags="constructor">
                </methodref>
                <methodref name="Free" visibility="public">
                </methodref>
                <methodref name="DisposeOf" visibility="public" procflags="inline">
                </methodref>
                <methodref name="InitInstance" visibility="public" procflags="class">
                </methodref>
                <methodref name="CleanupInstance" visibility="public">
                </methodref>
                <methodref name="ClassType" visibility="public" procflags="inline">
                </methodref>
                <methodref name="ClassName" visibility="public" procflags="class">
                </methodref>
                <methodref name="ClassNameIs" visibility="public" procflags="class">
                </methodref>
                <methodref name="ClassParent" visibility="public" procflags="class">
                </methodref>
                <methodref name="ClassInfo" visibility="public" procflags="class inline">
                </methodref>
                <methodref name="InstanceSize" visibility="public" procflags="class inline">
                </methodref>
                <methodref name="InheritsFrom" visibility="public" procflags="class">
                </methodref>
                <methodref name="MethodAddress" visibility="public" procflags="class overload">
                </methodref>
                <methodref name="MethodAddress" visibility="public" procflags="class overload">
                </methodref>
                <methodref name="MethodName" visibility="public" procflags="class">
                </methodref>
                <methodref name="QualifiedClassName" visibility="public" procflags="class">
                </methodref>
                <methodref name="FieldAddress" visibility="public" procflags="overload">
                </methodref>
                <methodref name="FieldAddress" visibility="public" procflags="overload">
                </methodref>
                <methodref name="GetInterface" visibility="public">
                </methodref>
                <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
                </methodref>
                <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
                </methodref>
                <methodref name="UnitName" visibility="public" procflags="class">
                </methodref>
                <methodref name="UnitScope" visibility="public" procflags="class">
                </methodref>
                <methodref name="Equals" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="GetHashCode" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="ToString" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="SafeCallException" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="AfterConstruction" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="Dispatch" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="DefaultHandler" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="NewInstance" visibility="public" procflags="class virtual">
                </methodref>
                <methodref name="FreeInstance" visibility="public" procflags="virtual">
                </methodref>
                <methodref name="Destroy" visibility="public" procflags="destructor virtual">
                </methodref>
                <methodref name="GetDisposed" visibility="protected" procflags="inline">
                </methodref>
                <methodref name="CheckDisposed" visibility="protected" procflags="inline">
                </methodref>
                <propertyref name="Disposed" visibility="protected">
                </propertyref>
              </ancestor>
            </ancestor>
          </ancestor>
        </ancestor>
        <members>
          <field name="FRetVal" type="TObject" visibility="private" size="4" offset="40" file="System.Classes.pas" line="2314">
          </field>
          <field name="FAsyncFunction" type="TAsyncFunctionEvent" visibility="private" size="8" offset="48" file="System.Classes.pas" line="2315">
          </field>
          <constructor name="Create" visibility="protected" file="System.Classes.pas" line="2317">
            <parameters>
              <parameter name="AAsyncFunction" type="TAsyncFunctionEvent" paramflags="const" />
              <parameter name="AContext" type="TObject" paramflags="const" />
              <parameter name="AComponent" type="TComponent" paramflags="const" />
            </parameters>
          </constructor>
          <procedure name="AsyncDispatch" visibility="protected" procflags="override" file="System.Classes.pas" line="2318">
          </procedure>
          <function name="GetRetVal" visibility="protected" file="System.Classes.pas" line="2319">
            <parameters>
              <retval type="TObject" />
            </parameters>
          </function>
        </members>
      </class>
      <field name="FOwner" type="TComponent" visibility="private" size="4" offset="4" file="System.Classes.pas" line="2322">
        <attributes>
          <attribute name="TObject" />
        </attributes>
      </field>
      <field name="FName" type="TComponentName" visibility="private" size="4" offset="8" file="System.Classes.pas" line="2323">
      </field>
      <field name="FTag" type="NativeInt" visibility="private" size="4" offset="12" file="System.Classes.pas" line="2324">
      </field>
      <field name="FComponents" type="TList&lt;System.Classes.TComponent&gt;" visibility="private" size="4" offset="16" file="System.Classes.pas" line="2325">
      </field>
      <field name="FFreeNotifies" type="TList&lt;System.Classes.TComponent&gt;" visibility="private" size="4" offset="20" file="System.Classes.pas" line="2326">
      </field>
      <field name="FDesignInfo" type="Integer" visibility="private" size="4" offset="24" file="System.Classes.pas" line="2328">
      </field>
      <field name="FComponentState" type="TComponentState" visibility="private" size="2" offset="28" file="System.Classes.pas" line="2329">
      </field>
      <field name="FVCLComObject" type="Pointer" visibility="private" size="4" offset="32" file="System.Classes.pas" line="2330">
      </field>
      <field name="FObservers" type="TObservers" visibility="private" size="4" offset="36" file="System.Classes.pas" line="2331">
      </field>
      <field name="FOnGetDeltaStreams" type="TGetDeltaStreamsEvent" visibility="private" size="8" offset="40" file="System.Classes.pas" line="2332">
      </field>
      <function name="GetComObject" visibility="private" file="System.Classes.pas" line="2333">
        <parameters>
          <retval type="IInterface" />
        </parameters>
      </function>
      <function name="GetComponent" visibility="private" file="System.Classes.pas" line="2334">
        <parameters>
          <parameter name="AIndex" type="Integer" />
          <retval type="TComponent" />
        </parameters>
      </function>
      <function name="GetComponentCount" visibility="private" file="System.Classes.pas" line="2335">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="GetComponentIndex" visibility="private" file="System.Classes.pas" line="2336">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="Insert" visibility="private" file="System.Classes.pas" line="2337">
        <parameters>
          <parameter name="AComponent" type="TComponent" />
        </parameters>
      </procedure>
      <procedure name="ReadLeft" visibility="private" file="System.Classes.pas" line="2338">
        <parameters>
          <parameter name="Reader" type="TReader" />
        </parameters>
      </procedure>
      <procedure name="ReadTop" visibility="private" file="System.Classes.pas" line="2339">
        <parameters>
          <parameter name="Reader" type="TReader" />
        </parameters>
      </procedure>
      <procedure name="Remove" visibility="private" file="System.Classes.pas" line="2340">
        <parameters>
          <parameter name="AComponent" type="TComponent" />
        </parameters>
      </procedure>
      <procedure name="RemoveNotification" visibility="private" file="System.Classes.pas" line="2341">
        <parameters>
          <parameter name="AComponent" type="TComponent" paramflags="const" />
        </parameters>
      </procedure>
      <procedure name="SetComponentIndex" visibility="private" file="System.Classes.pas" line="2342">
        <parameters>
          <parameter name="Value" type="Integer" />
        </parameters>
      </procedure>
      <procedure name="SetReference" visibility="private" file="System.Classes.pas" line="2343">
        <parameters>
          <parameter name="Enable" type="Boolean" />
        </parameters>
      </procedure>
      <procedure name="WriteLeft" visibility="private" file="System.Classes.pas" line="2344">
        <parameters>
          <parameter name="Writer" type="TWriter" />
        </parameters>
      </procedure>
      <procedure name="WriteTop" visibility="private" file="System.Classes.pas" line="2345">
        <parameters>
          <parameter name="Writer" type="TWriter" />
        </parameters>
      </procedure>
      <function name="IntfGetComponent" visibility="private" file="System.Classes.pas" line="2348">
        <parameters>
          <retval type="TComponent" />
        </parameters>
      </function>
      <procedure name="DoGetDeltaStreams" visibility="private" file="System.Classes.pas" line="2349">
        <parameters>
          <parameter name="Proc" type="TGetStreamProc" />
          <parameter name="Handled" type="Boolean" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="ReadDeltaStream" visibility="private" file="System.Classes.pas" line="2350">
        <parameters>
          <parameter name="S" type="TStream" paramflags="const" />
        </parameters>
      </procedure>
      <procedure name="ReadDeltaState" visibility="private" file="System.Classes.pas" line="2351">
      </procedure>
      <field name="FComponentStyle" type="TComponentStyle" visibility="protected" size="1" offset="48" file="System.Classes.pas" line="2353">
      </field>
      <field name="FSortedComponents" type="TList&lt;System.Classes.TComponent&gt;" visibility="private" size="4" offset="52" file="System.Classes.pas" line="2355">
      </field>
      <function name="FindSortedComponent" visibility="private" file="System.Classes.pas" line="2356">
        <parameters>
          <parameter name="AName" type="string" paramflags="const" />
          <parameter name="Index" type="Integer" paramflags="var" />
          <retval type="TComponent" />
        </parameters>
      </function>
      <procedure name="AddSortedComponent" visibility="private" file="System.Classes.pas" line="2357">
        <parameters>
          <parameter name="AComponent" type="TComponent" paramflags="const" />
        </parameters>
      </procedure>
      <procedure name="RemoveSortedComponent" visibility="private" procflags="inline" file="System.Classes.pas" line="2358">
        <parameters>
          <parameter name="AComponent" type="TComponent" paramflags="const" />
        </parameters>
      </procedure>
      <field name="FComparer" type="IComparer&lt;System.Classes.TComponent&gt;" visibility="private" varflags="class" file="System.Classes.pas" line="2360">
      </field>
      <procedure name="Create@" visibility="class private" procflags="class constructor noself" file="System.Classes.pas" line="2361">
      </procedure>
      <procedure name="AsyncSchedule" visibility="protected" procflags="virtual" file="System.Classes.pas" line="2368">
        <parameters>
          <parameter name="ASyncResult" type="TBaseAsyncResult" paramflags="const" />
        </parameters>
      </procedure>
      <procedure name="ChangeName" visibility="protected" file="System.Classes.pas" line="2369">
        <parameters>
          <parameter name="NewName" type="TComponentName" paramflags="const" />
        </parameters>
      </procedure>
      <procedure name="DefineProperties" visibility="protected" procflags="override" file="System.Classes.pas" line="2370">
        <parameters>
          <parameter name="Filer" type="TFiler" />
        </parameters>
      </procedure>
      <procedure name="GetChildren" visibility="protected" procflags="dynamic" file="System.Classes.pas" line="2371">
        <parameters>
          <parameter name="Proc" type="TGetChildProc" />
          <parameter name="Root" type="TComponent" />
        </parameters>
      </procedure>
      <function name="GetChildOwner" visibility="protected" procflags="dynamic" file="System.Classes.pas" line="2372">
        <parameters>
          <retval type="TComponent" />
        </parameters>
      </function>
      <function name="GetChildParent" visibility="protected" procflags="dynamic" file="System.Classes.pas" line="2373">
        <parameters>
          <retval type="TComponent" />
        </parameters>
      </function>
      <function name="GetOwner" visibility="protected" procflags="override" file="System.Classes.pas" line="2374">
        <parameters>
          <retval type="TPersistent" />
        </parameters>
      </function>
      <procedure name="Loaded" visibility="protected" procflags="virtual" file="System.Classes.pas" line="2375">
      </procedure>
      <procedure name="Notification" visibility="protected" procflags="virtual" file="System.Classes.pas" line="2376">
        <parameters>
          <parameter name="AComponent" type="TComponent" />
          <parameter name="Operation" type="TOperation" />
        </parameters>
      </procedure>
      <procedure name="GetDeltaStreams" visibility="protected" procflags="dynamic" file="System.Classes.pas" line="2377">
        <parameters>
          <parameter name="Proc" type="TGetStreamProc" />
        </parameters>
      </procedure>
      <procedure name="PaletteCreated" visibility="protected" procflags="dynamic" file="System.Classes.pas" line="2378">
      </procedure>
      <procedure name="ReadState" visibility="protected" procflags="virtual" file="System.Classes.pas" line="2379">
        <parameters>
          <parameter name="Reader" type="TReader" />
        </parameters>
      </procedure>
      <function name="CanObserve" visibility="protected" procflags="virtual" file="System.Classes.pas" line="2380">
        <parameters>
          <parameter name="ID" type="Integer" paramflags="const" />
          <retval type="Boolean" />
        </parameters>
      </function>
      <procedure name="ObserverAdded" visibility="protected" procflags="virtual" file="System.Classes.pas" line="2381">
        <parameters>
          <parameter name="ID" type="Integer" paramflags="const" />
          <parameter name="Observer" type="IObserver" paramflags="const" />
        </parameters>
      </procedure>
      <function name="GetObservers" visibility="protected" procflags="virtual" file="System.Classes.pas" line="2382">
        <parameters>
          <retval type="TObservers" />
        </parameters>
      </function>
      <procedure name="SetAncestor" visibility="protected" file="System.Classes.pas" line="2383">
        <parameters>
          <parameter name="Value" type="Boolean" />
        </parameters>
      </procedure>
      <procedure name="SetDesigning" visibility="protected" file="System.Classes.pas" line="2384">
        <parameters>
          <parameter name="Value" type="Boolean" />
          <parameter name="SetChildren" type="Boolean">
            <value>
              True
            </value>
          </parameter>
        </parameters>
      </procedure>
      <procedure name="SetInline" visibility="protected" file="System.Classes.pas" line="2385">
        <parameters>
          <parameter name="Value" type="Boolean" />
        </parameters>
      </procedure>
      <procedure name="SetDesignInstance" visibility="protected" file="System.Classes.pas" line="2386">
        <parameters>
          <parameter name="Value" type="Boolean" />
        </parameters>
      </procedure>
      <procedure name="SetName" visibility="protected" procflags="virtual" file="System.Classes.pas" line="2387">
        <parameters>
          <parameter name="NewName" type="TComponentName" paramflags="const" />
        </parameters>
      </procedure>
      <procedure name="SetChildOrder" visibility="protected" procflags="dynamic" file="System.Classes.pas" line="2388">
        <parameters>
          <parameter name="Child" type="TComponent" />
          <parameter name="Order" type="Integer" />
        </parameters>
      </procedure>
      <procedure name="SetParentComponent" visibility="protected" procflags="dynamic" file="System.Classes.pas" line="2389">
        <parameters>
          <parameter name="Value" type="TComponent" />
        </parameters>
      </procedure>
      <procedure name="Updating" visibility="protected" procflags="dynamic" file="System.Classes.pas" line="2390">
      </procedure>
      <procedure name="Updated" visibility="protected" procflags="dynamic" file="System.Classes.pas" line="2391">
      </procedure>
      <procedure name="UpdateRegistry" visibility="protected" procflags="class virtual" file="System.Classes.pas" line="2392">
        <parameters>
          <parameter name="Register" type="Boolean" />
          <parameter name="ClassID" type="string" paramflags="const" />
          <parameter name="ProgID" type="string" paramflags="const" />
        </parameters>
      </procedure>
      <procedure name="ValidateRename" visibility="protected" procflags="virtual" file="System.Classes.pas" line="2393">
        <parameters>
          <parameter name="AComponent" type="TComponent" />
          <parameter name="CurName" type="string" paramflags="const" />
          <parameter name="NewName" type="string" paramflags="const" />
        </parameters>
      </procedure>
      <procedure name="ValidateContainer" visibility="protected" procflags="dynamic" file="System.Classes.pas" line="2394">
        <parameters>
          <parameter name="AComponent" type="TComponent" />
        </parameters>
      </procedure>
      <procedure name="ValidateInsert" visibility="protected" procflags="dynamic" file="System.Classes.pas" line="2395">
        <parameters>
          <parameter name="AComponent" type="TComponent" />
        </parameters>
      </procedure>
      <procedure name="WriteState" visibility="protected" procflags="virtual" file="System.Classes.pas" line="2396">
        <parameters>
          <parameter name="Writer" type="TWriter" />
        </parameters>
      </procedure>
      <procedure name="RemoveFreeNotifications" visibility="protected" file="System.Classes.pas" line="2397">
      </procedure>
      <function name="QueryInterface" visibility="protected" procflags="virtual" callconv="stdcall" file="System.Classes.pas" line="2399">
        <parameters>
          <parameter name="IID" type="TGUID" paramflags="const" />
          <parameter name="Obj" paramflags="out" />
          <retval type="HRESULT" />
        </parameters>
      </function>
      <function name="_AddRef" visibility="protected" callconv="stdcall" file="System.Classes.pas" line="2400">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="_Release" visibility="protected" callconv="stdcall" file="System.Classes.pas" line="2401">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="GetTypeInfoCount" visibility="protected" callconv="stdcall" file="System.Classes.pas" line="2403">
        <parameters>
          <parameter name="Count" type="Integer" paramflags="out" />
          <retval type="HRESULT" />
        </parameters>
      </function>
      <function name="GetTypeInfo" visibility="protected" callconv="stdcall" file="System.Classes.pas" line="2404">
        <parameters>
          <parameter name="Index" type="Integer" />
          <parameter name="LocaleID" type="Integer" />
          <parameter name="TypeInfo" paramflags="out" />
          <retval type="HRESULT" />
        </parameters>
      </function>
      <function name="GetIDsOfNames" visibility="protected" callconv="stdcall" file="System.Classes.pas" line="2405">
        <parameters>
          <parameter name="IID" type="TGUID" paramflags="const" />
          <parameter name="Names" type="Pointer" />
          <parameter name="NameCount" type="Integer" />
          <parameter name="LocaleID" type="Integer" />
          <parameter name="DispIDs" type="Pointer" />
          <retval type="HRESULT" />
        </parameters>
      </function>
      <function name="Invoke" visibility="protected" callconv="stdcall" file="System.Classes.pas" line="2407">
        <parameters>
          <parameter name="DispID" type="Integer" />
          <parameter name="IID" type="TGUID" paramflags="const" />
          <parameter name="LocaleID" type="Integer" />
          <parameter name="Flags" type="Word" />
          <parameter name="Params" paramflags="var" />
          <parameter name="VarResult" type="Pointer" />
          <parameter name="ExcepInfo" type="Pointer" />
          <parameter name="ArgErr" type="Pointer" />
          <retval type="HRESULT" />
        </parameters>
      </function>
      <event name="OnGetDeltaStreams" visibility="protected" read="FOnGetDeltaStreams" write="FOnGetDeltaStreams" type="TGetDeltaStreamsEvent" file="System.Classes.pas" line="2409">
      </event>
      <constructor name="Create" visibility="public" file="System.Classes.pas" line="2411">
        <parameters>
          <parameter name="AOwner" type="TComponent" />
        </parameters>
      </constructor>
      <destructor name="Destroy" visibility="public" file="System.Classes.pas" line="2412">
        <parameters>
        </parameters>
      </destructor>
      <procedure name="BeforeDestruction" visibility="public" procflags="override" file="System.Classes.pas" line="2413">
      </procedure>
      <function name="BeginInvoke" visibility="public" procflags="overload" file="System.Classes.pas" line="2419">
        <parameters>
          <parameter name="AProc" type="TProc" paramflags="const" />
          <parameter name="AContext" type="TObject" paramflags="const">
            <value>
              nil
            </value>
          </parameter>
          <retval type="IAsyncResult" />
        </parameters>
      </function>
      <function name="BeginInvoke" visibility="public" procflags="overload" file="System.Classes.pas" line="2420">
        <parameters>
          <parameter name="AProc" type="TAsyncProcedureEvent" paramflags="const" />
          <parameter name="AContext" type="TObject" paramflags="const">
            <value>
              nil
            </value>
          </parameter>
          <retval type="IAsyncResult" />
        </parameters>
      </function>
      <function name="BeginInvoke" visibility="public" procflags="overload" file="System.Classes.pas" line="2421">
        <parameters>
          <parameter name="AFunc" type="TFunc&lt;System.Classes.TComponent.BeginInvoke.TResult&gt;" paramflags="const" />
          <parameter name="AContext" type="TObject" paramflags="const">
            <value>
              nil
            </value>
          </parameter>
          <retval type="IAsyncResult" />
        </parameters>
      </function>
      <function name="BeginInvoke" visibility="public" procflags="overload" file="System.Classes.pas" line="2422">
        <parameters>
          <parameter name="AProc" type="TAsyncConstArrayProc" paramflags="const" />
          <parameter name="Params" paramflags="const">
            <array name="Params">
              <element type="TVarRec" />
            </array>
          </parameter>
          <parameter name="AContext" type="TObject" paramflags="const">
            <value>
              nil
            </value>
          </parameter>
          <retval type="IAsyncResult" />
        </parameters>
      </function>
      <function name="BeginInvoke" visibility="public" procflags="overload" file="System.Classes.pas" line="2423">
        <parameters>
          <parameter name="AFunc" type="TAsyncConstArrayFunc&lt;System.Classes.TComponent.BeginInvoke.TResult&gt;" paramflags="const" />
          <parameter name="Params" paramflags="const">
            <array name="Params">
              <element type="TVarRec" />
            </array>
          </parameter>
          <parameter name="AContext" type="TObject" paramflags="const">
            <value>
              nil
            </value>
          </parameter>
          <retval type="IAsyncResult" />
        </parameters>
      </function>
      <function name="BeginInvoke" visibility="public" procflags="overload" file="System.Classes.pas" line="2424">
        <parameters>
          <parameter name="AProc" type="TAsyncConstArrayProcedureEvent" paramflags="const" />
          <parameter name="Params" paramflags="const">
            <array name="Params">
              <element type="TVarRec" />
            </array>
          </parameter>
          <parameter name="AContext" type="TObject" paramflags="const">
            <value>
              nil
            </value>
          </parameter>
          <retval type="IAsyncResult" />
        </parameters>
      </function>
      <function name="BeginInvoke" visibility="public" procflags="overload" file="System.Classes.pas" line="2425">
        <parameters>
          <parameter name="AFunc" type="TAsyncConstArrayFunctionEvent" paramflags="const" />
          <parameter name="Params" paramflags="const">
            <array name="Params">
              <element type="TVarRec" />
            </array>
          </parameter>
          <parameter name="AContext" type="TObject" paramflags="const">
            <value>
              nil
            </value>
          </parameter>
          <retval type="IAsyncResult" />
        </parameters>
      </function>
      <function name="BeginInvoke" visibility="public" procflags="overload" file="System.Classes.pas" line="2426">
        <parameters>
          <parameter name="AFunc" type="TAsyncFunctionEvent" paramflags="const" />
          <parameter name="AContext" type="TObject" paramflags="const">
            <value>
              nil
            </value>
          </parameter>
          <retval type="IAsyncResult" />
        </parameters>
      </function>
      <procedure name="EndInvoke" visibility="public" procflags="overload" file="System.Classes.pas" line="2432">
        <parameters>
          <parameter name="ASyncResult" type="IAsyncResult" paramflags="const" />
        </parameters>
      </procedure>
      <function name="EndInvoke" visibility="public" procflags="overload" file="System.Classes.pas" line="2438">
        <parameters>
          <parameter name="AsyncResult" type="IAsyncResult" paramflags="const" />
          <retval type="TResult" />
        </parameters>
      </function>
      <function name="EndFunctionInvoke" visibility="public" file="System.Classes.pas" line="2444">
        <parameters>
          <parameter name="AsyncResult" type="IAsyncResult" paramflags="const" />
          <retval type="TObject" />
        </parameters>
      </function>
      <procedure name="DestroyComponents" visibility="public" file="System.Classes.pas" line="2445">
      </procedure>
      <procedure name="Destroying" visibility="public" file="System.Classes.pas" line="2446">
      </procedure>
      <function name="ExecuteAction" visibility="public" procflags="dynamic" file="System.Classes.pas" line="2447">
        <parameters>
          <parameter name="Action" type="TBasicAction" />
          <retval type="Boolean" />
        </parameters>
      </function>
      <function name="FindComponent" visibility="public" file="System.Classes.pas" line="2448">
        <parameters>
          <parameter name="AName" type="string" paramflags="const" />
          <retval type="TComponent" />
        </parameters>
      </function>
      <procedure name="FreeNotification" visibility="public" file="System.Classes.pas" line="2449">
        <parameters>
          <parameter name="AComponent" type="TComponent" />
        </parameters>
      </procedure>
      <procedure name="RemoveFreeNotification" visibility="public" file="System.Classes.pas" line="2450">
        <parameters>
          <parameter name="AComponent" type="TComponent" />
        </parameters>
      </procedure>
      <procedure name="FreeOnRelease" visibility="public" file="System.Classes.pas" line="2451">
      </procedure>
      <function name="GetEnumerator" visibility="public" procflags="inline" file="System.Classes.pas" line="2452">
        <parameters>
          <retval type="TComponentEnumerator" />
        </parameters>
      </function>
      <function name="GetParentComponent" visibility="public" procflags="dynamic" file="System.Classes.pas" line="2453">
        <parameters>
          <retval type="TComponent" />
        </parameters>
      </function>
      <function name="GetNamePath" visibility="public" procflags="override" file="System.Classes.pas" line="2454">
        <parameters>
          <retval type="string" />
        </parameters>
      </function>
      <function name="HasParent" visibility="public" procflags="dynamic" file="System.Classes.pas" line="2455">
        <parameters>
          <retval type="Boolean" />
        </parameters>
      </function>
      <procedure name="InsertComponent" visibility="public" file="System.Classes.pas" line="2456">
        <parameters>
          <parameter name="AComponent" type="TComponent" paramflags="const" />
        </parameters>
      </procedure>
      <procedure name="RemoveComponent" visibility="public" file="System.Classes.pas" line="2457">
        <parameters>
          <parameter name="AComponent" type="TComponent" paramflags="const" />
        </parameters>
      </procedure>
      <procedure name="SetSubComponent" visibility="public" file="System.Classes.pas" line="2458">
        <parameters>
          <parameter name="IsSubComponent" type="Boolean" />
        </parameters>
      </procedure>
      <function name="SafeCallException" visibility="public" procflags="override" file="System.Classes.pas" line="2459">
        <parameters>
          <parameter name="ExceptObject" type="TObject" />
          <parameter name="ExceptAddr" type="Pointer" />
          <retval type="HRESULT" />
        </parameters>
      </function>
      <function name="UpdateAction" visibility="public" procflags="virtual" file="System.Classes.pas" line="2460">
        <parameters>
          <parameter name="Action" type="TBasicAction" />
          <retval type="Boolean" />
        </parameters>
      </function>
      <function name="IsImplementorOf" visibility="public" file="System.Classes.pas" line="2461">
        <parameters>
          <parameter name="I" type="IInterface" paramflags="const" />
          <retval type="Boolean" />
        </parameters>
      </function>
      <function name="ReferenceInterface" visibility="public" file="System.Classes.pas" line="2462">
        <parameters>
          <parameter name="I" type="IInterface" paramflags="const" />
          <parameter name="Operation" type="TOperation" />
          <retval type="Boolean" />
        </parameters>
      </function>
      <property name="ComObject" visibility="public" read="GetComObject" type="IInterface" file="System.Classes.pas" line="2463">
      </property>
      <property name="Components[Index]" visibility="public" read="GetComponent" type="TComponent" file="System.Classes.pas" line="2464">
      </property>
      <property name="ComponentCount" visibility="public" read="GetComponentCount" type="Integer" file="System.Classes.pas" line="2465">
      </property>
      <property name="ComponentIndex" visibility="public" read="GetComponentIndex" write="SetComponentIndex" type="Integer" file="System.Classes.pas" line="2466">
      </property>
      <property name="ComponentState" visibility="public" read="FComponentState" type="TComponentState" file="System.Classes.pas" line="2467">
      </property>
      <property name="ComponentStyle" visibility="public" read="FComponentStyle" type="TComponentStyle" file="System.Classes.pas" line="2468">
      </property>
      <property name="DesignInfo" visibility="public" read="FDesignInfo" write="FDesignInfo" type="Integer" file="System.Classes.pas" line="2469">
      </property>
      <property name="Owner" visibility="public" read="FOwner" type="TComponent" file="System.Classes.pas" line="2470">
      </property>
      <property name="VCLComObject" visibility="public" read="FVCLComObject" write="FVCLComObject" type="Pointer" file="System.Classes.pas" line="2471">
      </property>
      <property name="Observers" visibility="public" read="GetObservers" type="TObservers" file="System.Classes.pas" line="2472">
      </property>
      <property name="Name" visibility="published" read="FName" write="SetName" stored="False" type="TComponentName" default="0" file="System.Classes.pas" line="2474">
      </property>
      <property name="Tag" visibility="published" read="FTag" write="FTag" type="NativeInt" default="0" file="System.Classes.pas" line="2475">
      </property>
      <procedure name="Destroy@" visibility="class private" procflags="class destructor noself" generated="true">
      </procedure>
    </members>
  </class>
  <class name="TPersistent" alias="System.Classes.TPersistent" file="OverbyteIcsTypes.pas" line="231">
    <ancestor name="TObject" namespace="System">
      <methodref name="Create" visibility="public" procflags="constructor">
      </methodref>
      <methodref name="Free" visibility="public">
      </methodref>
      <methodref name="DisposeOf" visibility="public" procflags="inline">
      </methodref>
      <methodref name="InitInstance" visibility="public" procflags="class">
      </methodref>
      <methodref name="CleanupInstance" visibility="public">
      </methodref>
      <methodref name="ClassType" visibility="public" procflags="inline">
      </methodref>
      <methodref name="ClassName" visibility="public" procflags="class">
      </methodref>
      <methodref name="ClassNameIs" visibility="public" procflags="class">
      </methodref>
      <methodref name="ClassParent" visibility="public" procflags="class">
      </methodref>
      <methodref name="ClassInfo" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="InstanceSize" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="InheritsFrom" visibility="public" procflags="class">
      </methodref>
      <methodref name="MethodAddress" visibility="public" procflags="class overload">
      </methodref>
      <methodref name="MethodAddress" visibility="public" procflags="class overload">
      </methodref>
      <methodref name="MethodName" visibility="public" procflags="class">
      </methodref>
      <methodref name="QualifiedClassName" visibility="public" procflags="class">
      </methodref>
      <methodref name="FieldAddress" visibility="public" procflags="overload">
      </methodref>
      <methodref name="FieldAddress" visibility="public" procflags="overload">
      </methodref>
      <methodref name="GetInterface" visibility="public">
      </methodref>
      <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
      </methodref>
      <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="UnitName" visibility="public" procflags="class">
      </methodref>
      <methodref name="UnitScope" visibility="public" procflags="class">
      </methodref>
      <methodref name="Equals" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="GetHashCode" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="ToString" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="SafeCallException" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="AfterConstruction" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="Dispatch" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="DefaultHandler" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="NewInstance" visibility="public" procflags="class virtual">
      </methodref>
      <methodref name="FreeInstance" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="Destroy" visibility="public" procflags="destructor virtual">
      </methodref>
      <methodref name="GetDisposed" visibility="protected" procflags="inline">
      </methodref>
      <methodref name="CheckDisposed" visibility="protected" procflags="inline">
      </methodref>
      <propertyref name="Disposed" visibility="protected">
      </propertyref>
    </ancestor>
    <members>
      <procedure name="AssignError" visibility="private" file="System.Classes.pas" line="438">
        <parameters>
          <parameter name="Source" type="TPersistent" />
        </parameters>
      </procedure>
      <procedure name="AssignTo" visibility="protected" procflags="virtual" file="System.Classes.pas" line="440">
        <parameters>
          <parameter name="Dest" type="TPersistent" />
        </parameters>
      </procedure>
      <procedure name="DefineProperties" visibility="protected" procflags="virtual" file="System.Classes.pas" line="441">
        <parameters>
          <parameter name="Filer" type="TFiler" />
        </parameters>
      </procedure>
      <function name="GetOwner" visibility="protected" procflags="dynamic" file="System.Classes.pas" line="442">
        <parameters>
          <retval type="TPersistent" />
        </parameters>
      </function>
      <destructor name="Destroy" visibility="public" file="System.Classes.pas" line="444">
        <parameters>
        </parameters>
      </destructor>
      <procedure name="Assign" visibility="public" procflags="virtual" file="System.Classes.pas" line="445">
        <parameters>
          <parameter name="Source" type="TPersistent" />
        </parameters>
      </procedure>
      <function name="GetNamePath" visibility="public" procflags="dynamic" file="System.Classes.pas" line="446">
        <parameters>
          <retval type="string" />
        </parameters>
      </function>
    </members>
  </class>
  <class name="TList" alias="System.Classes.TList" file="OverbyteIcsTypes.pas" line="235">
    <ancestor name="TObject" namespace="System">
      <methodref name="Create" visibility="public" procflags="constructor">
      </methodref>
      <methodref name="Free" visibility="public">
      </methodref>
      <methodref name="DisposeOf" visibility="public" procflags="inline">
      </methodref>
      <methodref name="InitInstance" visibility="public" procflags="class">
      </methodref>
      <methodref name="CleanupInstance" visibility="public">
      </methodref>
      <methodref name="ClassType" visibility="public" procflags="inline">
      </methodref>
      <methodref name="ClassName" visibility="public" procflags="class">
      </methodref>
      <methodref name="ClassNameIs" visibility="public" procflags="class">
      </methodref>
      <methodref name="ClassParent" visibility="public" procflags="class">
      </methodref>
      <methodref name="ClassInfo" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="InstanceSize" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="InheritsFrom" visibility="public" procflags="class">
      </methodref>
      <methodref name="MethodAddress" visibility="public" procflags="class overload">
      </methodref>
      <methodref name="MethodAddress" visibility="public" procflags="class overload">
      </methodref>
      <methodref name="MethodName" visibility="public" procflags="class">
      </methodref>
      <methodref name="QualifiedClassName" visibility="public" procflags="class">
      </methodref>
      <methodref name="FieldAddress" visibility="public" procflags="overload">
      </methodref>
      <methodref name="FieldAddress" visibility="public" procflags="overload">
      </methodref>
      <methodref name="GetInterface" visibility="public">
      </methodref>
      <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
      </methodref>
      <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="UnitName" visibility="public" procflags="class">
      </methodref>
      <methodref name="UnitScope" visibility="public" procflags="class">
      </methodref>
      <methodref name="Equals" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="GetHashCode" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="ToString" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="SafeCallException" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="AfterConstruction" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="Dispatch" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="DefaultHandler" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="NewInstance" visibility="public" procflags="class virtual">
      </methodref>
      <methodref name="FreeInstance" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="Destroy" visibility="public" procflags="destructor virtual">
      </methodref>
      <methodref name="GetDisposed" visibility="protected" procflags="inline">
      </methodref>
      <methodref name="CheckDisposed" visibility="protected" procflags="inline">
      </methodref>
      <propertyref name="Disposed" visibility="protected">
      </propertyref>
    </ancestor>
    <members>
      <field name="FList" type="TPointerList" visibility="private" size="4" offset="4" file="System.Classes.pas" line="260">
      </field>
      <field name="FCount" type="Integer" visibility="private" size="4" offset="8" file="System.Classes.pas" line="261">
      </field>
      <field name="FCapacity" type="Integer" visibility="private" size="4" offset="12" file="System.Classes.pas" line="262">
      </field>
      <function name="Get" visibility="protected" file="System.Classes.pas" line="264">
        <parameters>
          <parameter name="Index" type="Integer" />
          <retval type="Pointer" />
        </parameters>
      </function>
      <procedure name="Grow" visibility="protected" procflags="virtual" file="System.Classes.pas" line="265">
      </procedure>
      <procedure name="Put" visibility="protected" file="System.Classes.pas" line="266">
        <parameters>
          <parameter name="Index" type="Integer" />
          <parameter name="Item" type="Pointer" />
        </parameters>
      </procedure>
      <procedure name="Notify" visibility="protected" procflags="virtual" file="System.Classes.pas" line="267">
        <parameters>
          <parameter name="Ptr" type="Pointer" />
          <parameter name="Action" type="TListNotification" />
        </parameters>
      </procedure>
      <procedure name="SetCapacity" visibility="protected" file="System.Classes.pas" line="268">
        <parameters>
          <parameter name="NewCapacity" type="Integer" />
        </parameters>
      </procedure>
      <procedure name="SetCount" visibility="protected" file="System.Classes.pas" line="269">
        <parameters>
          <parameter name="NewCount" type="Integer" />
        </parameters>
      </procedure>
      <enum name="TDirection" visibility="public" alias="System.Types.TDirection" file="System.Classes.pas" line="272">
        <element value="0" name="FromBeginning" file="System.Types.pas" line="87" />
        <element value="1" name="FromEnd" file="System.Types.pas" line="87" />
      </enum>
      <destructor name="Destroy" visibility="public" file="System.Classes.pas" line="274">
        <parameters>
        </parameters>
      </destructor>
      <function name="Add" visibility="public" file="System.Classes.pas" line="275">
        <parameters>
          <parameter name="Item" type="Pointer" />
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="Clear" visibility="public" procflags="virtual" file="System.Classes.pas" line="276">
      </procedure>
      <procedure name="Delete" visibility="public" file="System.Classes.pas" line="277">
        <parameters>
          <parameter name="Index" type="Integer" />
        </parameters>
      </procedure>
      <procedure name="Error" visibility="public" procflags="class overload virtual" file="System.Classes.pas" line="278">
        <parameters>
          <parameter name="Msg" type="string" paramflags="const" />
          <parameter name="Data" type="NativeInt" />
        </parameters>
      </procedure>
      <procedure name="Error" visibility="public" procflags="class overload" file="System.Classes.pas" line="279">
        <parameters>
          <parameter name="Msg" type="PResStringRec" />
          <parameter name="Data" type="NativeInt" />
        </parameters>
      </procedure>
      <procedure name="Exchange" visibility="public" file="System.Classes.pas" line="280">
        <parameters>
          <parameter name="Index1" type="Integer" />
          <parameter name="Index2" type="Integer" />
        </parameters>
      </procedure>
      <function name="Expand" visibility="public" file="System.Classes.pas" line="281">
        <parameters>
          <retval type="TList" />
        </parameters>
      </function>
      <function name="Extract" visibility="public" procflags="inline" file="System.Classes.pas" line="282">
        <parameters>
          <parameter name="Item" type="Pointer" />
          <retval type="Pointer" />
        </parameters>
      </function>
      <function name="ExtractItem" visibility="public" file="System.Classes.pas" line="283">
        <parameters>
          <parameter name="Item" type="Pointer" />
          <parameter name="Direction" type="TDirection" />
          <retval type="Pointer" />
        </parameters>
      </function>
      <function name="First" visibility="public" procflags="inline" file="System.Classes.pas" line="284">
        <parameters>
          <retval type="Pointer" />
        </parameters>
      </function>
      <function name="GetEnumerator" visibility="public" procflags="inline" file="System.Classes.pas" line="285">
        <parameters>
          <retval type="TListEnumerator" />
        </parameters>
      </function>
      <function name="IndexOf" visibility="public" file="System.Classes.pas" line="286">
        <parameters>
          <parameter name="Item" type="Pointer" />
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="IndexOfItem" visibility="public" file="System.Classes.pas" line="287">
        <parameters>
          <parameter name="Item" type="Pointer" />
          <parameter name="Direction" type="TDirection" />
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="Insert" visibility="public" file="System.Classes.pas" line="288">
        <parameters>
          <parameter name="Index" type="Integer" />
          <parameter name="Item" type="Pointer" />
        </parameters>
      </procedure>
      <function name="Last" visibility="public" file="System.Classes.pas" line="289">
        <parameters>
          <retval type="Pointer" />
        </parameters>
      </function>
      <procedure name="Move" visibility="public" file="System.Classes.pas" line="290">
        <parameters>
          <parameter name="CurIndex" type="Integer" />
          <parameter name="NewIndex" type="Integer" />
        </parameters>
      </procedure>
      <function name="Remove" visibility="public" procflags="inline" file="System.Classes.pas" line="291">
        <parameters>
          <parameter name="Item" type="Pointer" />
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="RemoveItem" visibility="public" file="System.Classes.pas" line="292">
        <parameters>
          <parameter name="Item" type="Pointer" />
          <parameter name="Direction" type="TDirection" />
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="Pack" visibility="public" file="System.Classes.pas" line="293">
      </procedure>
      <procedure name="Sort" visibility="public" file="System.Classes.pas" line="294">
        <parameters>
          <parameter name="Compare" type="TListSortCompare" />
        </parameters>
      </procedure>
      <procedure name="SortList" visibility="public" file="System.Classes.pas" line="295">
        <parameters>
          <parameter name="Compare" type="TListSortCompareFunc" paramflags="const" />
        </parameters>
      </procedure>
      <procedure name="Assign" visibility="public" file="System.Classes.pas" line="296">
        <parameters>
          <parameter name="ListA" type="TList" />
          <parameter name="AOperator" type="TListAssignOp">
            <value>
              laCopy
            </value>
          </parameter>
          <parameter name="ListB" type="TList">
            <value>
              nil
            </value>
          </parameter>
        </parameters>
      </procedure>
      <property name="Capacity" visibility="public" read="FCapacity" write="SetCapacity" type="Integer" file="System.Classes.pas" line="297">
      </property>
      <property name="Count" visibility="public" read="FCount" write="SetCount" type="Integer" file="System.Classes.pas" line="298">
      </property>
      <property name="Items[Index]" visibility="public" read="Get" write="Put" type="Pointer" file="System.Classes.pas" line="299">
      </property>
      <property name="List" visibility="public" read="FList" type="TPointerList" file="System.Classes.pas" line="300">
      </property>
    </members>
  </class>
  <class name="TStrings" alias="System.Classes.TStrings" file="OverbyteIcsTypes.pas" line="237">
    <ancestor name="TPersistent" namespace="System.Classes">
      <methodref name="AssignError" visibility="private">
      </methodref>
      <methodref name="AssignTo" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="DefineProperties" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="GetOwner" visibility="protected" procflags="dynamic">
      </methodref>
      <methodref name="Destroy" visibility="public" procflags="destructor override">
      </methodref>
      <methodref name="Assign" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="GetNamePath" visibility="public" procflags="dynamic">
      </methodref>
      <ancestor name="TObject" namespace="System">
        <methodref name="Create" visibility="public" procflags="constructor">
        </methodref>
        <methodref name="Free" visibility="public">
        </methodref>
        <methodref name="DisposeOf" visibility="public" procflags="inline">
        </methodref>
        <methodref name="InitInstance" visibility="public" procflags="class">
        </methodref>
        <methodref name="CleanupInstance" visibility="public">
        </methodref>
        <methodref name="ClassType" visibility="public" procflags="inline">
        </methodref>
        <methodref name="ClassName" visibility="public" procflags="class">
        </methodref>
        <methodref name="ClassNameIs" visibility="public" procflags="class">
        </methodref>
        <methodref name="ClassParent" visibility="public" procflags="class">
        </methodref>
        <methodref name="ClassInfo" visibility="public" procflags="class inline">
        </methodref>
        <methodref name="InstanceSize" visibility="public" procflags="class inline">
        </methodref>
        <methodref name="InheritsFrom" visibility="public" procflags="class">
        </methodref>
        <methodref name="MethodAddress" visibility="public" procflags="class overload">
        </methodref>
        <methodref name="MethodAddress" visibility="public" procflags="class overload">
        </methodref>
        <methodref name="MethodName" visibility="public" procflags="class">
        </methodref>
        <methodref name="QualifiedClassName" visibility="public" procflags="class">
        </methodref>
        <methodref name="FieldAddress" visibility="public" procflags="overload">
        </methodref>
        <methodref name="FieldAddress" visibility="public" procflags="overload">
        </methodref>
        <methodref name="GetInterface" visibility="public">
        </methodref>
        <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
        </methodref>
        <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
        </methodref>
        <methodref name="UnitName" visibility="public" procflags="class">
        </methodref>
        <methodref name="UnitScope" visibility="public" procflags="class">
        </methodref>
        <methodref name="Equals" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="GetHashCode" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="ToString" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="SafeCallException" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="AfterConstruction" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="Dispatch" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="DefaultHandler" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="NewInstance" visibility="public" procflags="class virtual">
        </methodref>
        <methodref name="FreeInstance" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="Destroy" visibility="public" procflags="destructor virtual">
        </methodref>
        <methodref name="GetDisposed" visibility="protected" procflags="inline">
        </methodref>
        <methodref name="CheckDisposed" visibility="protected" procflags="inline">
        </methodref>
        <propertyref name="Disposed" visibility="protected">
        </propertyref>
      </ancestor>
    </ancestor>
    <members>
      <field name="FEncoding" type="TEncoding" visibility="private" size="4" offset="4" file="System.Classes.pas" line="628">
      </field>
      <field name="FDefaultEncoding" type="TEncoding" visibility="private" size="4" offset="8" file="System.Classes.pas" line="629">
      </field>
      <field name="FLineBreak" type="string" visibility="private" size="4" offset="12" file="System.Classes.pas" line="630">
      </field>
      <field name="FAdapter" type="IStringsAdapter" visibility="private" size="4" offset="16" file="System.Classes.pas" line="631">
      </field>
      <field name="FUpdateCount" type="Integer" visibility="private" size="4" offset="20" file="System.Classes.pas" line="632">
      </field>
      <field name="FDelimiter" type="Char" visibility="private" size="2" offset="24" file="System.Classes.pas" line="633">
      </field>
      <field name="FQuoteChar" type="Char" visibility="private" size="2" offset="26" file="System.Classes.pas" line="634">
      </field>
      <field name="FNameValueSeparator" type="Char" visibility="private" size="2" offset="28" file="System.Classes.pas" line="635">
      </field>
      <field name="FOptions" type="TStringsOptions" visibility="private" size="1" offset="30" file="System.Classes.pas" line="636">
      </field>
      <function name="GetCommaText" visibility="private" file="System.Classes.pas" line="637">
        <parameters>
          <retval type="string" />
        </parameters>
      </function>
      <function name="GetDelimitedText" visibility="private" file="System.Classes.pas" line="638">
        <parameters>
          <retval type="string" />
        </parameters>
      </function>
      <function name="GetName" visibility="private" file="System.Classes.pas" line="639">
        <parameters>
          <parameter name="Index" type="Integer" />
          <retval type="string" />
        </parameters>
      </function>
      <function name="GetValue" visibility="private" file="System.Classes.pas" line="640">
        <parameters>
          <parameter name="Name" type="string" paramflags="const" />
          <retval type="string" />
        </parameters>
      </function>
      <procedure name="ReadData" visibility="private" file="System.Classes.pas" line="641">
        <parameters>
          <parameter name="Reader" type="TReader" />
        </parameters>
      </procedure>
      <procedure name="SetCommaText" visibility="private" file="System.Classes.pas" line="642">
        <parameters>
          <parameter name="Value" type="string" paramflags="const" />
        </parameters>
      </procedure>
      <procedure name="SetDelimitedText" visibility="private" file="System.Classes.pas" line="643">
        <parameters>
          <parameter name="Value" type="string" paramflags="const" />
        </parameters>
      </procedure>
      <procedure name="SetStringsAdapter" visibility="private" file="System.Classes.pas" line="644">
        <parameters>
          <parameter name="Value" type="IStringsAdapter" paramflags="const" />
        </parameters>
      </procedure>
      <procedure name="SetValue" visibility="private" file="System.Classes.pas" line="645">
        <parameters>
          <parameter name="Name" type="string" paramflags="const" />
          <parameter name="Value" type="string" paramflags="const" />
        </parameters>
      </procedure>
      <procedure name="WriteData" visibility="private" file="System.Classes.pas" line="646">
        <parameters>
          <parameter name="Writer" type="TWriter" />
        </parameters>
      </procedure>
      <function name="GetStrictDelimiter" visibility="private" procflags="inline" file="System.Classes.pas" line="647">
        <parameters>
          <retval type="Boolean" />
        </parameters>
      </function>
      <procedure name="SetStrictDelimiter" visibility="private" file="System.Classes.pas" line="648">
        <parameters>
          <parameter name="Value" type="Boolean" paramflags="const" />
        </parameters>
      </procedure>
      <function name="GetValueFromIndex" visibility="private" file="System.Classes.pas" line="649">
        <parameters>
          <parameter name="Index" type="Integer" />
          <retval type="string" />
        </parameters>
      </function>
      <procedure name="SetValueFromIndex" visibility="private" file="System.Classes.pas" line="650">
        <parameters>
          <parameter name="Index" type="Integer" />
          <parameter name="Value" type="string" paramflags="const" />
        </parameters>
      </procedure>
      <procedure name="SetDefaultEncoding" visibility="private" file="System.Classes.pas" line="651">
        <parameters>
          <parameter name="Value" type="TEncoding" paramflags="const" />
        </parameters>
      </procedure>
      <function name="GetTrailingLineBreak" visibility="private" procflags="inline" file="System.Classes.pas" line="652">
        <parameters>
          <retval type="Boolean" />
        </parameters>
      </function>
      <procedure name="SetTrailingLineBreak" visibility="private" file="System.Classes.pas" line="653">
        <parameters>
          <parameter name="Value" type="Boolean" paramflags="const" />
        </parameters>
      </procedure>
      <function name="GetUseLocale" visibility="private" procflags="inline" file="System.Classes.pas" line="654">
        <parameters>
          <retval type="Boolean" />
        </parameters>
      </function>
      <procedure name="SetUseLocale" visibility="private" file="System.Classes.pas" line="655">
        <parameters>
          <parameter name="Value" type="Boolean" paramflags="const" />
        </parameters>
      </procedure>
      <function name="GetWriteBOM" visibility="private" procflags="inline" file="System.Classes.pas" line="656">
        <parameters>
          <retval type="Boolean" />
        </parameters>
      </function>
      <procedure name="SetWriteBOM" visibility="private" file="System.Classes.pas" line="657">
        <parameters>
          <parameter name="Value" type="Boolean" paramflags="const" />
        </parameters>
      </procedure>
      <function name="GetUpdating" visibility="private" procflags="inline" file="System.Classes.pas" line="658">
        <parameters>
          <retval type="Boolean" />
        </parameters>
      </function>
      <function name="GetKeyName" visibility="private" file="System.Classes.pas" line="659">
        <parameters>
          <parameter name="Index" type="Integer" />
          <retval type="string" />
        </parameters>
      </function>
      <procedure name="DefineProperties" visibility="protected" procflags="override" file="System.Classes.pas" line="661">
        <parameters>
          <parameter name="Filer" type="TFiler" />
        </parameters>
      </procedure>
      <procedure name="Error" visibility="protected" procflags="overload" file="System.Classes.pas" line="662">
        <parameters>
          <parameter name="Msg" type="string" paramflags="const" />
          <parameter name="Data" type="Integer" />
        </parameters>
      </procedure>
      <procedure name="Error" visibility="protected" procflags="overload" file="System.Classes.pas" line="663">
        <parameters>
          <parameter name="Msg" type="PResStringRec" />
          <parameter name="Data" type="Integer" />
        </parameters>
      </procedure>
      <function name="ExtractName" visibility="protected" procflags="overload inline" file="System.Classes.pas" line="664">
        <parameters>
          <parameter name="S" type="string" paramflags="const" />
          <retval type="string" />
        </parameters>
      </function>
      <function name="ExtractName" visibility="protected" procflags="overload" file="System.Classes.pas" line="665">
        <parameters>
          <parameter name="S" type="string" paramflags="const" />
          <parameter name="AllNames" type="Boolean" />
          <retval type="string" />
        </parameters>
      </function>
      <function name="Get" visibility="protected" procflags="abstract virtual" file="System.Classes.pas" line="666">
        <parameters>
          <parameter name="Index" type="Integer" />
          <retval type="string" />
        </parameters>
      </function>
      <function name="GetCapacity" visibility="protected" procflags="virtual" file="System.Classes.pas" line="667">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="GetCount" visibility="protected" procflags="abstract virtual" file="System.Classes.pas" line="668">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="GetObject" visibility="protected" procflags="virtual" file="System.Classes.pas" line="669">
        <parameters>
          <parameter name="Index" type="Integer" />
          <retval type="TObject" />
        </parameters>
      </function>
      <function name="GetTextStr" visibility="protected" procflags="virtual" file="System.Classes.pas" line="670">
        <parameters>
          <retval type="string" />
        </parameters>
      </function>
      <procedure name="Put" visibility="protected" procflags="virtual" file="System.Classes.pas" line="671">
        <parameters>
          <parameter name="Index" type="Integer" />
          <parameter name="S" type="string" paramflags="const" />
        </parameters>
      </procedure>
      <procedure name="PutObject" visibility="protected" procflags="virtual" file="System.Classes.pas" line="672">
        <parameters>
          <parameter name="Index" type="Integer" />
          <parameter name="AObject" type="TObject" />
        </parameters>
      </procedure>
      <procedure name="SetCapacity" visibility="protected" procflags="virtual" file="System.Classes.pas" line="673">
        <parameters>
          <parameter name="NewCapacity" type="Integer" />
        </parameters>
      </procedure>
      <procedure name="SetEncoding" visibility="protected" procflags="virtual" file="System.Classes.pas" line="674">
        <parameters>
          <parameter name="Value" type="TEncoding" paramflags="const" />
        </parameters>
      </procedure>
      <procedure name="SetTextStr" visibility="protected" procflags="virtual" file="System.Classes.pas" line="675">
        <parameters>
          <parameter name="Value" type="string" paramflags="const" />
        </parameters>
      </procedure>
      <procedure name="SetUpdateState" visibility="protected" procflags="virtual" file="System.Classes.pas" line="676">
        <parameters>
          <parameter name="Updating" type="Boolean" />
        </parameters>
      </procedure>
      <function name="CompareStrings" visibility="protected" procflags="virtual" file="System.Classes.pas" line="677">
        <parameters>
          <parameter name="S1" type="string" paramflags="const" />
          <parameter name="S2" type="string" paramflags="const" />
          <retval type="Integer" />
        </parameters>
      </function>
      <property name="UpdateCount" visibility="protected" read="FUpdateCount" type="Integer" file="System.Classes.pas" line="678">
      </property>
      <constructor name="Create" visibility="public" file="System.Classes.pas" line="680">
        <parameters>
        </parameters>
      </constructor>
      <destructor name="Destroy" visibility="public" file="System.Classes.pas" line="681">
        <parameters>
        </parameters>
      </destructor>
      <function name="Add" visibility="public" procflags="virtual" file="System.Classes.pas" line="682">
        <parameters>
          <parameter name="S" type="string" paramflags="const" />
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="AddPair" visibility="public" procflags="overload" file="System.Classes.pas" line="688">
        <parameters>
          <parameter name="Name" type="string" paramflags="const" />
          <parameter name="Value" type="string" paramflags="const" />
          <retval type="TStrings" />
        </parameters>
      </function>
      <function name="AddPair" visibility="public" procflags="overload" file="System.Classes.pas" line="694">
        <parameters>
          <parameter name="Name" type="string" paramflags="const" />
          <parameter name="Value" type="string" paramflags="const" />
          <parameter name="AObject" type="TObject" />
          <retval type="TStrings" />
        </parameters>
      </function>
      <function name="AddObject" visibility="public" procflags="virtual" file="System.Classes.pas" line="695">
        <parameters>
          <parameter name="S" type="string" paramflags="const" />
          <parameter name="AObject" type="TObject" />
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="Append" visibility="public" file="System.Classes.pas" line="696">
        <parameters>
          <parameter name="S" type="string" paramflags="const" />
        </parameters>
      </procedure>
      <procedure name="AddStrings" visibility="public" procflags="overload virtual" file="System.Classes.pas" line="697">
        <parameters>
          <parameter name="Strings" type="TStrings" />
        </parameters>
      </procedure>
      <procedure name="AddStrings" visibility="public" procflags="overload" file="System.Classes.pas" line="698">
        <parameters>
          <parameter name="Strings" type="TArray&lt;System.string&gt;" paramflags="const" />
        </parameters>
      </procedure>
      <procedure name="AddStrings" visibility="public" procflags="overload" file="System.Classes.pas" line="699">
        <parameters>
          <parameter name="Strings" type="TArray&lt;System.string&gt;" paramflags="const" />
          <parameter name="Objects" type="TArray&lt;System.TObject&gt;" paramflags="const" />
        </parameters>
      </procedure>
      <procedure name="Assign" visibility="public" procflags="override" file="System.Classes.pas" line="700">
        <parameters>
          <parameter name="Source" type="TPersistent" />
        </parameters>
      </procedure>
      <procedure name="SetStrings" visibility="public" file="System.Classes.pas" line="707">
        <parameters>
          <parameter name="Source" type="TStrings" />
        </parameters>
      </procedure>
      <procedure name="BeginUpdate" visibility="public" file="System.Classes.pas" line="708">
      </procedure>
      <procedure name="Clear" visibility="public" procflags="abstract virtual" file="System.Classes.pas" line="709">
      </procedure>
      <procedure name="Delete" visibility="public" procflags="abstract virtual" file="System.Classes.pas" line="710">
        <parameters>
          <parameter name="Index" type="Integer" />
        </parameters>
      </procedure>
      <procedure name="EndUpdate" visibility="public" file="System.Classes.pas" line="711">
      </procedure>
      <function name="Equals" visibility="public" file="System.Classes.pas" line="712">
        <parameters>
          <parameter name="Strings" type="TStrings" />
          <retval type="Boolean" />
        </parameters>
      </function>
      <procedure name="Exchange" visibility="public" procflags="virtual" file="System.Classes.pas" line="713">
        <parameters>
          <parameter name="Index1" type="Integer" />
          <parameter name="Index2" type="Integer" />
        </parameters>
      </procedure>
      <function name="GetEnumerator" visibility="public" procflags="inline" file="System.Classes.pas" line="714">
        <parameters>
          <retval type="TStringsEnumerator" />
        </parameters>
      </function>
      <function name="GetText" visibility="public" procflags="virtual" file="System.Classes.pas" line="715">
        <parameters>
          <retval type="PWideChar" />
        </parameters>
      </function>
      <function name="IndexOf" visibility="public" procflags="virtual" file="System.Classes.pas" line="716">
        <parameters>
          <parameter name="S" type="string" paramflags="const" />
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="IndexOfName" visibility="public" procflags="virtual" file="System.Classes.pas" line="717">
        <parameters>
          <parameter name="Name" type="string" paramflags="const" />
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="IndexOfObject" visibility="public" procflags="virtual" file="System.Classes.pas" line="718">
        <parameters>
          <parameter name="AObject" type="TObject" />
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="Insert" visibility="public" procflags="abstract virtual" file="System.Classes.pas" line="719">
        <parameters>
          <parameter name="Index" type="Integer" />
          <parameter name="S" type="string" paramflags="const" />
        </parameters>
      </procedure>
      <procedure name="InsertObject" visibility="public" procflags="virtual" file="System.Classes.pas" line="720">
        <parameters>
          <parameter name="Index" type="Integer" />
          <parameter name="S" type="string" paramflags="const" />
          <parameter name="AObject" type="TObject" />
        </parameters>
      </procedure>
      <procedure name="LoadFromFile" visibility="public" procflags="overload virtual" file="System.Classes.pas" line="722">
        <parameters>
          <parameter name="FileName" type="string" paramflags="const" />
        </parameters>
      </procedure>
      <procedure name="LoadFromFile" visibility="public" procflags="overload virtual" file="System.Classes.pas" line="723">
        <parameters>
          <parameter name="FileName" type="string" paramflags="const" />
          <parameter name="Encoding" type="TEncoding" />
        </parameters>
      </procedure>
      <procedure name="LoadFromStream" visibility="public" procflags="overload virtual" file="System.Classes.pas" line="724">
        <parameters>
          <parameter name="Stream" type="TStream" />
        </parameters>
      </procedure>
      <procedure name="LoadFromStream" visibility="public" procflags="overload virtual" file="System.Classes.pas" line="725">
        <parameters>
          <parameter name="Stream" type="TStream" />
          <parameter name="Encoding" type="TEncoding" />
        </parameters>
      </procedure>
      <procedure name="Move" visibility="public" procflags="virtual" file="System.Classes.pas" line="726">
        <parameters>
          <parameter name="CurIndex" type="Integer" />
          <parameter name="NewIndex" type="Integer" />
        </parameters>
      </procedure>
      <procedure name="SaveToFile" visibility="public" procflags="overload virtual" file="System.Classes.pas" line="727">
        <parameters>
          <parameter name="FileName" type="string" paramflags="const" />
        </parameters>
      </procedure>
      <procedure name="SaveToFile" visibility="public" procflags="overload virtual" file="System.Classes.pas" line="728">
        <parameters>
          <parameter name="FileName" type="string" paramflags="const" />
          <parameter name="Encoding" type="TEncoding" />
        </parameters>
      </procedure>
      <procedure name="SaveToStream" visibility="public" procflags="overload virtual" file="System.Classes.pas" line="729">
        <parameters>
          <parameter name="Stream" type="TStream" />
        </parameters>
      </procedure>
      <procedure name="SaveToStream" visibility="public" procflags="overload virtual" file="System.Classes.pas" line="730">
        <parameters>
          <parameter name="Stream" type="TStream" />
          <parameter name="Encoding" type="TEncoding" />
        </parameters>
      </procedure>
      <procedure name="SetText" visibility="public" procflags="virtual" file="System.Classes.pas" line="731">
        <parameters>
          <parameter name="Text" type="PWideChar" />
        </parameters>
      </procedure>
      <function name="ToStringArray" visibility="public" file="System.Classes.pas" line="732">
        <parameters>
          <retval type="TArray&lt;System.string&gt;" />
        </parameters>
      </function>
      <function name="ToObjectArray" visibility="public" file="System.Classes.pas" line="733">
        <parameters>
          <retval type="TArray&lt;System.TObject&gt;" />
        </parameters>
      </function>
      <property name="Updating" visibility="public" read="GetUpdating" type="Boolean" file="System.Classes.pas" line="738">
      </property>
      <property name="Capacity" visibility="public" read="GetCapacity" write="SetCapacity" type="Integer" file="System.Classes.pas" line="739">
      </property>
      <property name="CommaText" visibility="public" read="GetCommaText" write="SetCommaText" type="string" default="0" file="System.Classes.pas" line="740">
      </property>
      <property name="Count" visibility="public" read="GetCount" type="Integer" file="System.Classes.pas" line="741">
      </property>
      <property name="DefaultEncoding" visibility="public" read="FDefaultEncoding" write="SetDefaultEncoding" type="TEncoding" file="System.Classes.pas" line="742">
      </property>
      <property name="Delimiter" visibility="public" read="FDelimiter" write="FDelimiter" type="Char" file="System.Classes.pas" line="743">
      </property>
      <property name="DelimitedText" visibility="public" read="GetDelimitedText" write="SetDelimitedText" type="string" default="0" file="System.Classes.pas" line="744">
      </property>
      <property name="Encoding" visibility="public" read="FEncoding" type="TEncoding" file="System.Classes.pas" line="745">
      </property>
      <property name="LineBreak" visibility="public" read="FLineBreak" write="FLineBreak" type="string" default="0" file="System.Classes.pas" line="746">
      </property>
      <property name="Names[Index]" visibility="public" read="GetName" type="string" file="System.Classes.pas" line="747">
      </property>
      <property name="KeyNames[Index]" visibility="public" read="GetKeyName" type="string" file="System.Classes.pas" line="754">
      </property>
      <property name="Objects[Index]" visibility="public" read="GetObject" write="PutObject" type="TObject" file="System.Classes.pas" line="755">
      </property>
      <property name="QuoteChar" visibility="public" read="FQuoteChar" write="FQuoteChar" type="Char" file="System.Classes.pas" line="756">
      </property>
      <property name="Values[const Name]" visibility="public" read="GetValue" write="SetValue" type="string" file="System.Classes.pas" line="757">
      </property>
      <property name="ValueFromIndex[Index]" visibility="public" read="GetValueFromIndex" write="SetValueFromIndex" type="string" file="System.Classes.pas" line="758">
      </property>
      <property name="NameValueSeparator" visibility="public" read="FNameValueSeparator" write="FNameValueSeparator" type="Char" file="System.Classes.pas" line="759">
      </property>
      <property name="StrictDelimiter" visibility="public" read="GetStrictDelimiter" write="SetStrictDelimiter" type="Boolean" file="System.Classes.pas" line="760">
      </property>
      <property name="Strings[Index]" visibility="public" read="Get" write="Put" type="string" file="System.Classes.pas" line="761">
      </property>
      <property name="Text" visibility="public" read="GetTextStr" write="SetTextStr" type="string" default="0" file="System.Classes.pas" line="762">
      </property>
      <property name="StringsAdapter" visibility="public" read="FAdapter" write="SetStringsAdapter" type="IStringsAdapter" file="System.Classes.pas" line="763">
      </property>
      <property name="WriteBOM" visibility="public" read="GetWriteBOM" write="SetWriteBOM" type="Boolean" file="System.Classes.pas" line="764">
      </property>
      <property name="TrailingLineBreak" visibility="public" read="GetTrailingLineBreak" write="SetTrailingLineBreak" type="Boolean" file="System.Classes.pas" line="771">
      </property>
      <property name="UseLocale" visibility="public" read="GetUseLocale" write="SetUseLocale" type="Boolean" file="System.Classes.pas" line="778">
      </property>
      <property name="Options" visibility="public" read="FOptions" write="FOptions" type="TStringsOptions" file="System.Classes.pas" line="784">
      </property>
    </members>
  </class>
  <class name="TStringList" alias="System.Classes.TStringList" file="OverbyteIcsTypes.pas" line="239">
    <ancestor name="TStrings" namespace="System.Classes">
      <methodref name="GetCommaText" visibility="private">
      </methodref>
      <methodref name="GetDelimitedText" visibility="private">
      </methodref>
      <methodref name="GetName" visibility="private">
      </methodref>
      <methodref name="GetValue" visibility="private">
      </methodref>
      <methodref name="ReadData" visibility="private">
      </methodref>
      <methodref name="SetCommaText" visibility="private">
      </methodref>
      <methodref name="SetDelimitedText" visibility="private">
      </methodref>
      <methodref name="SetStringsAdapter" visibility="private">
      </methodref>
      <methodref name="SetValue" visibility="private">
      </methodref>
      <methodref name="WriteData" visibility="private">
      </methodref>
      <methodref name="GetStrictDelimiter" visibility="private" procflags="inline">
      </methodref>
      <methodref name="SetStrictDelimiter" visibility="private">
      </methodref>
      <methodref name="GetValueFromIndex" visibility="private">
      </methodref>
      <methodref name="SetValueFromIndex" visibility="private">
      </methodref>
      <methodref name="SetDefaultEncoding" visibility="private">
      </methodref>
      <methodref name="GetTrailingLineBreak" visibility="private" procflags="inline">
      </methodref>
      <methodref name="SetTrailingLineBreak" visibility="private">
      </methodref>
      <methodref name="GetUseLocale" visibility="private" procflags="inline">
      </methodref>
      <methodref name="SetUseLocale" visibility="private">
      </methodref>
      <methodref name="GetWriteBOM" visibility="private" procflags="inline">
      </methodref>
      <methodref name="SetWriteBOM" visibility="private">
      </methodref>
      <methodref name="GetUpdating" visibility="private" procflags="inline">
      </methodref>
      <methodref name="GetKeyName" visibility="private">
      </methodref>
      <methodref name="DefineProperties" visibility="protected" procflags="override">
      </methodref>
      <methodref name="Error" visibility="protected" procflags="overload">
      </methodref>
      <methodref name="Error" visibility="protected" procflags="overload">
      </methodref>
      <methodref name="ExtractName" visibility="protected" procflags="overload inline">
      </methodref>
      <methodref name="ExtractName" visibility="protected" procflags="overload">
      </methodref>
      <methodref name="Get" visibility="protected" procflags="abstract virtual">
      </methodref>
      <methodref name="GetCapacity" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="GetCount" visibility="protected" procflags="abstract virtual">
      </methodref>
      <methodref name="GetObject" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="GetTextStr" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="Put" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="PutObject" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="SetCapacity" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="SetEncoding" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="SetTextStr" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="SetUpdateState" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="CompareStrings" visibility="protected" procflags="virtual">
      </methodref>
      <propertyref name="UpdateCount" visibility="protected">
      </propertyref>
      <methodref name="Create" visibility="public" procflags="constructor">
      </methodref>
      <methodref name="Destroy" visibility="public" procflags="destructor override">
      </methodref>
      <methodref name="Add" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="AddPair" visibility="public" procflags="overload">
      </methodref>
      <methodref name="AddPair" visibility="public" procflags="overload">
      </methodref>
      <methodref name="AddObject" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="Append" visibility="public">
      </methodref>
      <methodref name="AddStrings" visibility="public" procflags="overload virtual">
      </methodref>
      <methodref name="AddStrings" visibility="public" procflags="overload">
      </methodref>
      <methodref name="AddStrings" visibility="public" procflags="overload">
      </methodref>
      <methodref name="Assign" visibility="public" procflags="override">
      </methodref>
      <methodref name="SetStrings" visibility="public">
      </methodref>
      <methodref name="BeginUpdate" visibility="public">
      </methodref>
      <methodref name="Clear" visibility="public" procflags="abstract virtual">
      </methodref>
      <methodref name="Delete" visibility="public" procflags="abstract virtual">
      </methodref>
      <methodref name="EndUpdate" visibility="public">
      </methodref>
      <methodref name="Equals" visibility="public">
      </methodref>
      <methodref name="Exchange" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="GetEnumerator" visibility="public" procflags="inline">
      </methodref>
      <methodref name="GetText" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="IndexOf" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="IndexOfName" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="IndexOfObject" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="Insert" visibility="public" procflags="abstract virtual">
      </methodref>
      <methodref name="InsertObject" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="LoadFromFile" visibility="public" procflags="overload virtual">
      </methodref>
      <methodref name="LoadFromFile" visibility="public" procflags="overload virtual">
      </methodref>
      <methodref name="LoadFromStream" visibility="public" procflags="overload virtual">
      </methodref>
      <methodref name="LoadFromStream" visibility="public" procflags="overload virtual">
      </methodref>
      <methodref name="Move" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="SaveToFile" visibility="public" procflags="overload virtual">
      </methodref>
      <methodref name="SaveToFile" visibility="public" procflags="overload virtual">
      </methodref>
      <methodref name="SaveToStream" visibility="public" procflags="overload virtual">
      </methodref>
      <methodref name="SaveToStream" visibility="public" procflags="overload virtual">
      </methodref>
      <methodref name="SetText" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="ToStringArray" visibility="public">
      </methodref>
      <methodref name="ToObjectArray" visibility="public">
      </methodref>
      <propertyref name="Updating" visibility="public">
      </propertyref>
      <propertyref name="Capacity" visibility="public">
      </propertyref>
      <propertyref name="CommaText" visibility="public">
      </propertyref>
      <propertyref name="Count" visibility="public">
      </propertyref>
      <propertyref name="DefaultEncoding" visibility="public">
      </propertyref>
      <propertyref name="Delimiter" visibility="public">
      </propertyref>
      <propertyref name="DelimitedText" visibility="public">
      </propertyref>
      <propertyref name="Encoding" visibility="public">
      </propertyref>
      <propertyref name="LineBreak" visibility="public">
      </propertyref>
      <propertyref name="Names" visibility="public">
      </propertyref>
      <propertyref name="KeyNames" visibility="public">
      </propertyref>
      <propertyref name="Objects" visibility="public">
      </propertyref>
      <propertyref name="QuoteChar" visibility="public">
      </propertyref>
      <propertyref name="Values" visibility="public">
      </propertyref>
      <propertyref name="ValueFromIndex" visibility="public">
      </propertyref>
      <propertyref name="NameValueSeparator" visibility="public">
      </propertyref>
      <propertyref name="StrictDelimiter" visibility="public">
      </propertyref>
      <propertyref name="Strings" visibility="public">
      </propertyref>
      <propertyref name="Text" visibility="public">
      </propertyref>
      <propertyref name="StringsAdapter" visibility="public">
      </propertyref>
      <propertyref name="WriteBOM" visibility="public">
      </propertyref>
      <propertyref name="TrailingLineBreak" visibility="public">
      </propertyref>
      <propertyref name="UseLocale" visibility="public">
      </propertyref>
      <propertyref name="Options" visibility="public">
      </propertyref>
      <ancestor name="TPersistent" namespace="System.Classes">
        <methodref name="AssignError" visibility="private">
        </methodref>
        <methodref name="AssignTo" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="DefineProperties" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetOwner" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="Destroy" visibility="public" procflags="destructor override">
        </methodref>
        <methodref name="Assign" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="GetNamePath" visibility="public" procflags="dynamic">
        </methodref>
        <ancestor name="TObject" namespace="System">
          <methodref name="Create" visibility="public" procflags="constructor">
          </methodref>
          <methodref name="Free" visibility="public">
          </methodref>
          <methodref name="DisposeOf" visibility="public" procflags="inline">
          </methodref>
          <methodref name="InitInstance" visibility="public" procflags="class">
          </methodref>
          <methodref name="CleanupInstance" visibility="public">
          </methodref>
          <methodref name="ClassType" visibility="public" procflags="inline">
          </methodref>
          <methodref name="ClassName" visibility="public" procflags="class">
          </methodref>
          <methodref name="ClassNameIs" visibility="public" procflags="class">
          </methodref>
          <methodref name="ClassParent" visibility="public" procflags="class">
          </methodref>
          <methodref name="ClassInfo" visibility="public" procflags="class inline">
          </methodref>
          <methodref name="InstanceSize" visibility="public" procflags="class inline">
          </methodref>
          <methodref name="InheritsFrom" visibility="public" procflags="class">
          </methodref>
          <methodref name="MethodAddress" visibility="public" procflags="class overload">
          </methodref>
          <methodref name="MethodAddress" visibility="public" procflags="class overload">
          </methodref>
          <methodref name="MethodName" visibility="public" procflags="class">
          </methodref>
          <methodref name="QualifiedClassName" visibility="public" procflags="class">
          </methodref>
          <methodref name="FieldAddress" visibility="public" procflags="overload">
          </methodref>
          <methodref name="FieldAddress" visibility="public" procflags="overload">
          </methodref>
          <methodref name="GetInterface" visibility="public">
          </methodref>
          <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
          </methodref>
          <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
          </methodref>
          <methodref name="UnitName" visibility="public" procflags="class">
          </methodref>
          <methodref name="UnitScope" visibility="public" procflags="class">
          </methodref>
          <methodref name="Equals" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="GetHashCode" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="ToString" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="SafeCallException" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="AfterConstruction" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="Dispatch" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="DefaultHandler" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="NewInstance" visibility="public" procflags="class virtual">
          </methodref>
          <methodref name="FreeInstance" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="Destroy" visibility="public" procflags="destructor virtual">
          </methodref>
          <methodref name="GetDisposed" visibility="protected" procflags="inline">
          </methodref>
          <methodref name="CheckDisposed" visibility="protected" procflags="inline">
          </methodref>
          <propertyref name="Disposed" visibility="protected">
          </propertyref>
        </ancestor>
      </ancestor>
    </ancestor>
    <members>
      <set name="TOverridden" visibility="private" alias="System.Classes.TOverridden">
        <element name="sloCompareStrings">
        </element>
        <element name="sloGetObject">
        </element>
      </set>
      <field name="FList" type="TStringItemList" visibility="private" size="4" offset="32" file="System.Classes.pas" line="805">
      </field>
      <field name="FCount" type="Integer" visibility="private" size="4" offset="36" file="System.Classes.pas" line="806">
      </field>
      <field name="FCapacity" type="Integer" visibility="private" size="4" offset="40" file="System.Classes.pas" line="807">
      </field>
      <field name="FSorted" type="Boolean" visibility="private" size="1" offset="44" file="System.Classes.pas" line="808">
      </field>
      <field name="FDuplicates" type="TDuplicates" visibility="private" size="1" offset="45" file="System.Classes.pas" line="809">
      </field>
      <field name="FCaseSensitive" type="Boolean" visibility="private" size="1" offset="46" file="System.Classes.pas" line="810">
      </field>
      <field name="FOnChange" type="TNotifyEvent" visibility="private" size="8" offset="48" file="System.Classes.pas" line="811">
      </field>
      <field name="FOnChanging" type="TNotifyEvent" visibility="private" size="8" offset="56" file="System.Classes.pas" line="812">
      </field>
      <field name="FOwnsObject" type="Boolean" visibility="private" size="1" offset="64" file="System.Classes.pas" line="813">
      </field>
      <field name="FOverridden" type="TStringList.TOverridden" visibility="private" size="1" offset="65" file="System.Classes.pas" line="814">
      </field>
      <procedure name="Grow" visibility="private" file="System.Classes.pas" line="815">
      </procedure>
      <procedure name="QuickSort" visibility="private" file="System.Classes.pas" line="816">
        <parameters>
          <parameter name="L" type="Integer" />
          <parameter name="R" type="Integer" />
          <parameter name="SCompare" type="TStringListSortCompare" />
        </parameters>
      </procedure>
      <procedure name="SetSorted" visibility="private" file="System.Classes.pas" line="817">
        <parameters>
          <parameter name="Value" type="Boolean" />
        </parameters>
      </procedure>
      <procedure name="SetCaseSensitive" visibility="private" file="System.Classes.pas" line="818">
        <parameters>
          <parameter name="Value" type="Boolean" paramflags="const" />
        </parameters>
      </procedure>
      <function name="InternalStrComp" visibility="private" procflags="static inline" file="System.Classes.pas" line="819">
        <parameters>
          <parameter name="L" type="PWideChar" />
          <parameter name="R" type="PWideChar" />
          <parameter name="Len" type="Integer" />
          <parameter name="Mode" type="Integer" />
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="LinearIndexOfName" visibility="private" file="System.Classes.pas" line="820">
        <parameters>
          <parameter name="Name" type="string" paramflags="const" />
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="SortedIndexOfName" visibility="private" file="System.Classes.pas" line="821">
        <parameters>
          <parameter name="Name" type="string" paramflags="const" />
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="Changed" visibility="protected" procflags="virtual" file="System.Classes.pas" line="823">
      </procedure>
      <procedure name="Changing" visibility="protected" procflags="virtual" file="System.Classes.pas" line="824">
      </procedure>
      <procedure name="ExchangeItems" visibility="protected" file="System.Classes.pas" line="825">
        <parameters>
          <parameter name="Index1" type="Integer" />
          <parameter name="Index2" type="Integer" />
        </parameters>
      </procedure>
      <function name="Get" visibility="protected" procflags="override" file="System.Classes.pas" line="826">
        <parameters>
          <parameter name="Index" type="Integer" />
          <retval type="string" />
        </parameters>
      </function>
      <function name="GetCapacity" visibility="protected" procflags="override" file="System.Classes.pas" line="827">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="GetCount" visibility="protected" procflags="override" file="System.Classes.pas" line="828">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="GetObject" visibility="protected" procflags="override" file="System.Classes.pas" line="829">
        <parameters>
          <parameter name="Index" type="Integer" />
          <retval type="TObject" />
        </parameters>
      </function>
      <procedure name="Put" visibility="protected" procflags="override" file="System.Classes.pas" line="830">
        <parameters>
          <parameter name="Index" type="Integer" />
          <parameter name="S" type="string" paramflags="const" />
        </parameters>
      </procedure>
      <procedure name="PutObject" visibility="protected" procflags="override" file="System.Classes.pas" line="831">
        <parameters>
          <parameter name="Index" type="Integer" />
          <parameter name="AObject" type="TObject" />
        </parameters>
      </procedure>
      <procedure name="SetCapacity" visibility="protected" procflags="override" file="System.Classes.pas" line="832">
        <parameters>
          <parameter name="NewCapacity" type="Integer" />
        </parameters>
      </procedure>
      <procedure name="SetUpdateState" visibility="protected" procflags="override" file="System.Classes.pas" line="833">
        <parameters>
          <parameter name="Updating" type="Boolean" />
        </parameters>
      </procedure>
      <function name="CompareStrings" visibility="protected" procflags="override" file="System.Classes.pas" line="834">
        <parameters>
          <parameter name="S1" type="string" paramflags="const" />
          <parameter name="S2" type="string" paramflags="const" />
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="InsertItem" visibility="protected" procflags="virtual" file="System.Classes.pas" line="835">
        <parameters>
          <parameter name="Index" type="Integer" />
          <parameter name="S" type="string" paramflags="const" />
          <parameter name="AObject" type="TObject" />
        </parameters>
      </procedure>
      <constructor name="Create" visibility="public" file="System.Classes.pas" line="837">
        <parameters>
        </parameters>
      </constructor>
      <constructor name="Create" visibility="public" file="System.Classes.pas" line="838">
        <parameters>
          <parameter name="OwnsObjects" type="Boolean" />
        </parameters>
      </constructor>
      <constructor name="Create" visibility="public" file="System.Classes.pas" line="843">
        <parameters>
          <parameter name="QuoteChar" type="Char" />
          <parameter name="Delimiter" type="Char" />
        </parameters>
      </constructor>
      <constructor name="Create" visibility="public" file="System.Classes.pas" line="848">
        <parameters>
          <parameter name="QuoteChar" type="Char" />
          <parameter name="Delimiter" type="Char" />
          <parameter name="Options" type="TStringsOptions" />
        </parameters>
      </constructor>
      <constructor name="Create" visibility="public" file="System.Classes.pas" line="853">
        <parameters>
          <parameter name="Duplicates" type="TDuplicates" />
          <parameter name="Sorted" type="Boolean" />
          <parameter name="CaseSensitive" type="Boolean" />
        </parameters>
      </constructor>
      <destructor name="Destroy" visibility="public" file="System.Classes.pas" line="854">
        <parameters>
        </parameters>
      </destructor>
      <function name="Add" visibility="public" procflags="override" file="System.Classes.pas" line="855">
        <parameters>
          <parameter name="S" type="string" paramflags="const" />
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="AddObject" visibility="public" procflags="override" file="System.Classes.pas" line="856">
        <parameters>
          <parameter name="S" type="string" paramflags="const" />
          <parameter name="AObject" type="TObject" />
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="AddStrings" visibility="public" procflags="overload override" file="System.Classes.pas" line="857">
        <parameters>
          <parameter name="Strings" type="TStrings" />
        </parameters>
      </procedure>
      <procedure name="Assign" visibility="public" procflags="override" file="System.Classes.pas" line="858">
        <parameters>
          <parameter name="Source" type="TPersistent" />
        </parameters>
      </procedure>
      <procedure name="Clear" visibility="public" procflags="override" file="System.Classes.pas" line="859">
      </procedure>
      <procedure name="Delete" visibility="public" procflags="override" file="System.Classes.pas" line="860">
        <parameters>
          <parameter name="Index" type="Integer" />
        </parameters>
      </procedure>
      <procedure name="Exchange" visibility="public" procflags="override" file="System.Classes.pas" line="861">
        <parameters>
          <parameter name="Index1" type="Integer" />
          <parameter name="Index2" type="Integer" />
        </parameters>
      </procedure>
      <function name="Find" visibility="public" procflags="virtual" file="System.Classes.pas" line="862">
        <parameters>
          <parameter name="S" type="string" paramflags="const" />
          <parameter name="Index" type="Integer" paramflags="var" />
          <retval type="Boolean" />
        </parameters>
      </function>
      <function name="IndexOf" visibility="public" procflags="override" file="System.Classes.pas" line="863">
        <parameters>
          <parameter name="S" type="string" paramflags="const" />
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="IndexOfName" visibility="public" procflags="override" file="System.Classes.pas" line="864">
        <parameters>
          <parameter name="Name" type="string" paramflags="const" />
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="IndexOfObject" visibility="public" procflags="override" file="System.Classes.pas" line="865">
        <parameters>
          <parameter name="AObject" type="TObject" />
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="Insert" visibility="public" procflags="override" file="System.Classes.pas" line="866">
        <parameters>
          <parameter name="Index" type="Integer" />
          <parameter name="S" type="string" paramflags="const" />
        </parameters>
      </procedure>
      <procedure name="InsertObject" visibility="public" procflags="override" file="System.Classes.pas" line="867">
        <parameters>
          <parameter name="Index" type="Integer" />
          <parameter name="S" type="string" paramflags="const" />
          <parameter name="AObject" type="TObject" />
        </parameters>
      </procedure>
      <procedure name="Sort" visibility="public" procflags="virtual" file="System.Classes.pas" line="869">
      </procedure>
      <procedure name="CustomSort" visibility="public" procflags="virtual" file="System.Classes.pas" line="870">
        <parameters>
          <parameter name="Compare" type="TStringListSortCompare" />
        </parameters>
      </procedure>
      <property name="Duplicates" visibility="public" read="FDuplicates" write="FDuplicates" type="TDuplicates" file="System.Classes.pas" line="871">
      </property>
      <property name="Sorted" visibility="public" read="FSorted" write="SetSorted" type="Boolean" file="System.Classes.pas" line="872">
      </property>
      <property name="CaseSensitive" visibility="public" read="FCaseSensitive" write="SetCaseSensitive" type="Boolean" file="System.Classes.pas" line="873">
      </property>
      <event name="OnChange" visibility="public" read="FOnChange" write="FOnChange" type="TNotifyEvent" file="System.Classes.pas" line="874">
      </event>
      <event name="OnChanging" visibility="public" read="FOnChanging" write="FOnChanging" type="TNotifyEvent" file="System.Classes.pas" line="875">
      </event>
      <property name="OwnsObjects" visibility="public" read="FOwnsObject" write="FOwnsObject" type="Boolean" file="System.Classes.pas" line="876">
      </property>
    </members>
  </class>
  <enum name="TOperation" alias="System.Classes.TOperation" file="OverbyteIcsTypes.pas" line="241">
    <element value="0" name="opInsert" file="System.Classes.pas" line="1859" />
    <element value="1" name="opRemove" file="System.Classes.pas" line="1859" />
  </enum>
  <enum name="TListNotification" alias="System.Classes.TListNotification" file="OverbyteIcsTypes.pas" line="243">
    <element value="0" name="lnAdded" file="System.Classes.pas" line="232" />
    <element value="1" name="lnExtracted" file="System.Classes.pas" line="232" />
    <element value="2" name="lnDeleted" file="System.Classes.pas" line="232" />
  </enum>
  <struct name="TTimeZoneInformation" alias="Winapi.Windows._TIME_ZONE_INFORMATION" size="172" file="OverbyteIcsTypes.pas" line="245">
    <field name="Bias" type="Integer" visibility="public" size="4" offset="0" file="Winapi.Windows.pas" line="8757">
    </field>
    <field name="StandardName" visibility="public" size="64" offset="4" file="Winapi.Windows.pas" line="8758">
      <array name="StandardName" visibility="public" low="0" high="31">
        <element type="Char" />
      </array>
    </field>
    <field name="StandardDate" type="_SYSTEMTIME" visibility="public" size="16" offset="68" file="Winapi.Windows.pas" line="8759">
    </field>
    <field name="StandardBias" type="Integer" visibility="public" size="4" offset="84" file="Winapi.Windows.pas" line="8760">
    </field>
    <field name="DaylightName" visibility="public" size="64" offset="88" file="Winapi.Windows.pas" line="8761">
      <array name="DaylightName" visibility="public" low="0" high="31">
        <element type="Char" />
      </array>
    </field>
    <field name="DaylightDate" type="_SYSTEMTIME" visibility="public" size="16" offset="152" file="Winapi.Windows.pas" line="8762">
    </field>
    <field name="DaylightBias" type="Integer" visibility="public" size="4" offset="168" file="Winapi.Windows.pas" line="8763">
    </field>
  </struct>
  <type name="HWND" type="cardinal" loBound="0" hiBound="-1" file="Winapi.Windows.pas" line="3803" />
  <type name="DWORD" type="cardinal" loBound="0" hiBound="-1" file="System.pas" line="12" />
  <type name="UINT" type="cardinal" loBound="0" hiBound="-1" file="System.pas" line="12" />
  <struct name="TRTLCriticalSection" alias="Winapi.Windows._RTL_CRITICAL_SECTION" size="24" file="OverbyteIcsTypes.pas" line="253">
    <field name="DebugInfo" type="PRTLCriticalSectionDebug" visibility="public" size="4" offset="0" file="Winapi.Windows.pas" line="3514">
    </field>
    <field name="LockCount" type="Integer" visibility="public" size="4" offset="4" file="Winapi.Windows.pas" line="3515">
    </field>
    <field name="RecursionCount" type="Integer" visibility="public" size="4" offset="8" file="Winapi.Windows.pas" line="3516">
    </field>
    <field name="OwningThread" type="NativeUInt" visibility="public" size="4" offset="12" file="Winapi.Windows.pas" line="3517">
    </field>
    <field name="LockSemaphore" type="NativeUInt" visibility="public" size="4" offset="16" file="Winapi.Windows.pas" line="3518">
    </field>
    <field name="Reserved" type="NativeUInt" visibility="public" size="4" offset="20" file="Winapi.Windows.pas" line="3519">
    </field>
  </struct>
  <struct name="TWndClass" alias="Winapi.Windows.tagWNDCLASSW" size="40" file="OverbyteIcsTypes.pas" line="255">
    <field name="style" type="Cardinal" visibility="public" size="4" offset="0" file="Winapi.Windows.pas" line="25104">
    </field>
    <field name="lpfnWndProc" type="Pointer" visibility="public" size="4" offset="4" file="Winapi.Windows.pas" line="25105">
    </field>
    <field name="cbClsExtra" type="Integer" visibility="public" size="4" offset="8" file="Winapi.Windows.pas" line="25106">
    </field>
    <field name="cbWndExtra" type="Integer" visibility="public" size="4" offset="12" file="Winapi.Windows.pas" line="25107">
    </field>
    <field name="hInstance" type="NativeUInt" visibility="public" size="4" offset="16" file="Winapi.Windows.pas" line="25108">
    </field>
    <field name="hIcon" type="HICON" visibility="public" size="4" offset="20" file="Winapi.Windows.pas" line="25109">
    </field>
    <field name="hCursor" type="HICON" visibility="public" size="4" offset="24" file="Winapi.Windows.pas" line="25110">
    </field>
    <field name="hbrBackground" type="HBRUSH" visibility="public" size="4" offset="28" file="Winapi.Windows.pas" line="25111">
    </field>
    <field name="lpszMenuName" type="PWideChar" visibility="public" size="4" offset="32" file="Winapi.Windows.pas" line="25112">
    </field>
    <field name="lpszClassName" type="PWideChar" visibility="public" size="4" offset="36" file="Winapi.Windows.pas" line="25113">
    </field>
  </struct>
  <struct name="TMsg" alias="Winapi.Windows.tagMSG" size="28" file="OverbyteIcsTypes.pas" line="257">
    <field name="hwnd" type="HWND" visibility="public" size="4" offset="0" file="Winapi.Windows.pas" line="25130">
    </field>
    <field name="message" type="Cardinal" visibility="public" size="4" offset="4" file="Winapi.Windows.pas" line="25131">
    </field>
    <field name="wParam" type="NativeUInt" visibility="public" size="4" offset="8" file="Winapi.Windows.pas" line="25132">
    </field>
    <field name="lParam" type="NativeInt" visibility="public" size="4" offset="12" file="Winapi.Windows.pas" line="25133">
    </field>
    <field name="time" type="Cardinal" visibility="public" size="4" offset="16" file="Winapi.Windows.pas" line="25134">
    </field>
    <field name="pt" type="TPoint" visibility="public" size="8" offset="20" file="Winapi.Windows.pas" line="25135">
    </field>
  </struct>
  <type name="WPARAM" type="cardinal" loBound="0" hiBound="-1" file="System.pas" line="12" />
  <type name="LPARAM" type="integer" loBound="-2147483648" hiBound="2147483647" file="System.pas" line="12" />
  <pointer name="POverlapped" alias="Winapi.Windows.POverlapped" type="_OVERLAPPED" indircnt="1" file="Winapi.Windows.pas" line="4563" />
  <pointer name="FARPROC" alias="System.Pointer" type="Pointer" indircnt="1" file="System.pas" line="12" />
  <type name="LRESULT" type="integer" loBound="-2147483648" hiBound="2147483647" file="System.pas" line="12" />
  <type name="Short" type="shortint" loBound="-32768" hiBound="32767" file="System.pas" line="12" />
  <type name="LOWORD" type="word" loBound="0" hiBound="65535" file="System.pas" line="12" />
</namespace>
